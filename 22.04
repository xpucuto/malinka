Script started on Fri Apr 22 13:09:23 2016
]0;pi@raspberrypi: ~[01;32mpi@raspberrypi[00m:[01;34m~ $[00m cd
]0;pi@raspberrypi: ~[01;32mpi@raspberrypi[00m:[01;34m~ $[00m openaps init loop[K[K[K[Kby[Kulgaria
Initialized empty Git repository in /home/pi/bulgaria/.git/
[master (root-commit) e2f5a57] initializing openaps 0.0.10
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 openaps.ini
]0;pi@raspberrypi: ~[01;32mpi@raspberrypi[00m:[01;34m~ $[00m cd bulgaria
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m ls
openaps.ini
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m cat openaps.ini
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps dei[Kvice add medtronic[K[K[K[K[K[K[K[K[Kpump[K[K[K[Kveo medtronic967542 967542
added medtronic://veo
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps device add cgm dexcom
added dexcom://cgm
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps device show
medtronic://veo
dexcom://cgm
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m cat openaps.ini
[device "veo"]
vendor = openaps.vendors.medtronic
extra = veo.ini

[device "cgm"]
vendor = openaps.vendors.dexcom
extra = cgm.ini

]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m car veo.ini
bash: car: command not found
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m car veo.ini[C[1P veo.init veo.ini
[device "veo"]
serial = 967542

]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps use veo model
Traceback (most recent call last):
  File "/usr/local/bin/openaps-use", line 4, in <module>
    __import__('pkg_resources').run_script('openaps==0.0.10', 'openaps-use')
  File "/usr/local/lib/python2.7/dist-packages/setuptools-20.9.0-py2.7.egg/pkg_resources/__init__.py", line 719, in run_script
    self.require(requires)[0].run_script(script_name, ns)
  File "/usr/local/lib/python2.7/dist-packages/setuptools-20.9.0-py2.7.egg/pkg_resources/__init__.py", line 1504, in run_script
    exec(code, namespace, namespace)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/EGG-INFO/scripts/openaps-use", line 63, in <module>
    app( )
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/cli/__init__.py", line 44, in __call__
    self.run(self.args)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/EGG-INFO/scripts/openaps-use", line 57, in run
    output = app(args, self)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/uses/__init__.py", line 92, in __call__
    return self.method.selected(args)(args, app)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/uses/__init__.py", line 31, in __call__
    return self.method(args, app)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/uses/use.py", line 44, in __call__
    self.before_main(args, app)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/vendors/medtronic.py", line 61, in before_main
    self.setup_medtronic( )
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/vendors/medtronic.py", line 141, in setup_medtronic
    self.uart.open( )
  File "/usr/local/lib/python2.7/dist-packages/decocare-0.0.22-py2.7.egg/decocare/stick.py", line 874, in open
    log.info('%s' % self.product_info( ))
  File "/usr/local/lib/python2.7/dist-packages/decocare-0.0.22-py2.7.egg/decocare/stick.py", line 515, in product_info
    return self.query(ProductInfo)
  File "/usr/local/lib/python2.7/dist-packages/decocare-0.0.22-py2.7.egg/decocare/stick.py", line 509, in query
    return self.process( )
  File "/usr/local/lib/python2.7/dist-packages/decocare-0.0.22-py2.7.egg/decocare/stick.py", line 490, in process
    raw = self.send_force_read( )
  File "/usr/local/lib/python2.7/dist-packages/decocare-0.0.22-py2.7.egg/decocare/stick.py", line 606, in send_force_read
    self.link.write(reader.format( ))
  File "/usr/local/lib/python2.7/dist-packages/decocare-0.0.22-py2.7.egg/decocare/link.py", line 47, in write
    r = self.serial.write( string )
  File "/usr/lib/python2.7/dist-packages/serial/serialposix.py", line 466, in write
    if not self._isOpen: raise portNotOpenError
ValueError: Attempting to use a port that is not open
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps use veo model
"754"]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps -h
usage: openaps [-h] [-c C C] [-C CONFIG] [--version] [command] ...

  openaps - openaps: a toolkit for DIY artificial pancreas system

positional arguments:
  command
  args

optional arguments:
  -h, --help            show this help message and exit
  -c C C
  -C CONFIG, --config CONFIG
  --version             show program's version number and exit

  Utilities for developing an artificial pancreas system.
  openaps helps you manage and structure reports for various devices.

       .-. .,-.  .-. .--. .-.  .,-. .--.
      (   )|   )(.-' |  |(   ) |   )`--.
       `-' |`-'  `--''  `-`-'`-|`-' `--'
           |                   |        
           '                   '        
Common workflows:

Getting started:

openaps init <name>    - create a new instance of openaps
openaps init myopenaps - this creates an instance of openaps in a new
                         directory, called myopenaps

cd myopenaps - change directory to root of new repo

A valid instance of openaps is a git repo with a file called
openaps.ini present.

openaps will track configuration and some status information inside of
openaps.ini.  If you already have a git repo which you would like to
become a valid openaps environent, in the root of your repo, run:

    touch openaps.ini
    git add openaps.ini
    git commit -avm 'init openaps'

Now, wth a valid openaps environment, you can register devices for
use.  A device is implemented by a vendor.  openaps [will] provide a
modular, language and process independent environment for creating
vendors and devices, but for now the only two are dexcom and
medtronic.

To register devices for use, see:
  openaps device -h
  openaps device add <name> <vendor> [opts...]
  eg:
  # register a medtronic device named pump
  openaps device add pump medtronic 665455
  # register a dexcom device named cgm
  openaps device add cgm dexcom

Now that devices are known, and we have a variety of commands
available.  We can explore how to produce reports by using devices
with the openaps use command:

    openaps use <device-name> <use-name> [opts]

openaps use commands can only be used after devices have been added to
the openaps.ini config using openaps device add.
Eg:
    openaps use pump -h        - show available commands for the
                                 device known as "pump"
    openaps use pump iter_pump - get last 100 pump history records
                                 from the device called pump
    openaps use cgm -h         - show available commands for the
                                 device known as "cgm"
    openaps use cgm glucose

After experimenting with openaps use commands, users can save reports
using the openaps report commands.
openaps report commands map openaps use commands to filenames:

    openaps report add <report-name> <report-formatter> <device> <use> [opts]

    # add a report, saved in a file called pump-history.json, which is
    # JSON format, from device pump using use iter_pump.
    openaps report add pump-history.json JSON pump iter_pump

    # add a report, saved in a file called glucose.json, which is
    # JSON format, from device cgm using use glucose.
    openaps report add glucose.json JSON cgm glucose

    # invoke the report to create glucose.json
    openaps report invoke glucose.json

    # invoke the report to create pump-history.json
    openaps report invoke pump-history.json

  All commands support tab completion, and -h help options to help
  explore the live help system.
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps use <my_pump_name> model[C[1P model[1P model[1P model[1P model[1P model[1P model[1P model[1P model[1P model[1P model[1P model[1P model[1P model[1P model[1Pmodel[C modelv modele modelo model[C model
"754"]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps p[Kuse veo read_clock
"2008-04-06T02:37:12"]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps use veo read_clock
"2016-04-22T13:56:06"]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps use veo status
{
  "status": "normal", 
  "bolusing": false, 
  "suspended": false
}]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps use veo settings
{
  "low_reservoir_warn_point": 20, 
  "keypad_lock_status": 0, 
  "maxBasal": 2.0, 
  "temp_basal": {
    "percent": 100, 
    "type": "Units/hour"
  }, 
  "low_reservoir_warn_type": 0, 
  "insulinConcentration": 50, 
  "audio_bolus_enable": true, 
  "variable_bolus_enable": true, 
  "alarm": {
    "volume": -1, 
    "mode": 1
  }, 
  "rf_enable": false, 
  "auto_off_duration_hrs": 0, 
  "block_enable": false, 
  "timeformat": 80, 
  "insulin_action_curve": 3, 
  "audio_bolus_size": 0.5, 
  "selected_pattern": 1, 
  "patterns_enabled": true, 
  "maxBolus": 15.0, 
  "paradigm_enabled": 1
}]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps use veo settings[2Ptatusread_clock
"2016-04-22T13:59:22"]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps use cgm iter)b[Kg;lucpose[K[K[K[K[K[K[K[K[K[K_glucose 1
[
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T19:55:30", 
    "display_time": "2016-04-22T13:55:56", 
    "glucose": 189
  }
]]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps use cgm iter_glucose 1[Kopenaps use veo iter_pump_houtr[Krs[K[K[Krs 4
[
  {
    "_type": "Sara6E", 
    "_description": "Sara6E 2008-04-07T00:00:00 head[1], body[49] op[0x6e]", 
    "timestamp": "2008-04-07T00:00:00", 
    "_body": "0600a2a2a20100000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 
    "valid_date": "2008-04-06", 
    "_head": "6e", 
    "_date": "4608"
  }, 
  {
    "_type": "ResultDailyTotal", 
    "_description": "ResultDailyTotal 2008-04-07T00:00:00 head[5], body[3] op[0x07]", 
    "timestamp": "2008-04-07T00:00:00", 
    "_body": "000000", 
    "valid_date": "2008-04-06", 
    "_head": "0700000000", 
    "_date": "4608"
  }, 
  {
    "_type": "NewTimeSet", 
    "_description": "NewTimeSet 2016-04-22T13:56:00 head[2], body[0] op[0x18]", 
    "timestamp": "2016-04-22T13:56:00", 
    "_body": "", 
    "_head": "1800", 
    "_date": "40380d1610"
  }
]]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m oe[Kpans[K[K[Kenaps er[K[Kreport add last_four([K_pump_hours.json JSON ve o itre[K[Ker[1P iter[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C i[1Pter[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cv itere iter[Co iter[C[C[C iter[C[C[C[1Piter[C[C[C[C[C[C[C_pump_hours 4
usage: openaps-report add [-h] report {base,text,stdout,JSON} device ...
openaps-report add: error: argument device: invalid choice: 'vveo' (choose from u'cgm', u'veo')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add last_four_pump_hours.json JSON vveeo iter_pump_hours 4[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ceo[1P[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

added veo://JSON/iter_pump_hours/last_four_pump_hours.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m car last_four_hours.json
bash: car: command not found
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m car last_four_hours.json[1P last_four_hours.jsonr last_four_hours.json
bash: car: command not found
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m car last_four_hours.json[1P last_four_hours.jsont last_four_hours.json
cat: last_four_hours.json: No such file or directory
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m cat last_four_hours.jsonphours.jsonihours.jsonmhours.jsonphours.json_hours.json[1Phours.json[1Phours.json[1Phours.json[1Phours.jsonuhours.jsonmhours.jsonphours.json_hours.json
cat: last_four_pump_hours.json: No such file or directory
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m cat last_four_pump_hours.json
cat: last_four_pump_hours.json: No such file or directory
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m cat last_four_pump_hours.json[1P_hours.json[1P_hours.json[1P_hours.json[1P_hours.jsonv_hours.jsone_hours.jsono_hours.json
cat: last_four_veo_hours.json: No such file or directory
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m cat last_four_veo_hours.json[K[Kopenaps report invoke last_two[K[K[K[K_fpur_[K[K[K[Kor[Kur_pump_hours.json
veo://JSON/iter_pump_hours/last_four_pump_hours.json
cat last_foreporting last_four_pump_hours.json
ur]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m cat last_fourt[K[Kt[Kr_pump_houts.[K[K[Ks[Krs.json
[
  {
    "programmed": 2.0, 
    "_type": "Bolus", 
    "_description": "Bolus 2016-04-22T14:01:08 head[8], body[0] op[0x01]", 
    "timestamp": "2016-04-22T14:01:08", 
    "_body": "", 
    "_head": "0100500050000000", 
    "amount": 2.0, 
    "unabsorbed": 0.0, 
    "duration": 0, 
    "type": "normal", 
    "_date": "48014e7610"
  }
]]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps use veo reservoir
78.3]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps use veo itre_[K[K[Ker_pump_hours 3
[
  {
    "programmed": 2.0, 
    "_type": "Bolus", 
    "_description": "Bolus 2016-04-22T14:01:08 head[8], body[0] op[0x01]", 
    "timestamp": "2016-04-22T14:01:08", 
    "_body": "", 
    "_head": "0100500050000000", 
    "amount": 2.0, 
    "unabsorbed": 0.0, 
    "duration": 0, 
    "type": "normal", 
    "_date": "48014e7610"
  }
]]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m $ openaps report invoke last_four_pump_hours.json
bash: $: command not found
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m $ openaps report invoke last_four_cgm_hours.jsonpump_hours.json[1P[1P$ openaps report invoke last_four_cgm_hours.json[1P
usage: openaps-report invoke [-h]
                             {last_four_pump_hours.json}
                             [{last_four_pump_hours.json} ...]
openaps-report invoke: error: argument report: invalid choice: 'last_four_cgm_hours.json' (choose from u'last_four_pump_hours.json')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report invoke last_four_pump_hours.json[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[14Puse veo iter_pump_hours 3report invoke last_four_pump_hours.json[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Kopenaps report invoke last_for[Kur_[ump[K[K[K[Kpump.[K_hourse.json
usage: openaps-report invoke [-h]
                             {last_four_pump_hours.json}
                             [{last_four_pump_hours.json} ...]
openaps-report invoke: error: argument report: invalid choice: 'last_four_pump_hourse.json' (choose from u'last_four_pump_hours.json')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report invoke last_four_pump_hourse.json[1P.json[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[14Puse veo iter_pump_hours 3[8Preservoiriter_pump_hours 3report invoke last_four_pump_hours.jsone.json[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Kopenaps use cgm itre_cgm[K[K[K[K[K[Ker_cgm_hours 4
usage: openaps-use cgm [-h] USAGE ...
openaps-use cgm: error: argument USAGE: invalid choice: 'iter_cgm_hours' (choose from 'GetFirmwareHeader', 'ReadBatteryLevel', 'ReadBatteryState', 'ReadManufacturingData', 'ReadTransmitterId', 'battery', 'calibrations', 'glucose', 'insertion_time', 'iter_calibrations', 'iter_calibrations_hours', 'iter_glucose', 'iter_glucose_hours', 'iter_insertion_time', 'iter_insertion_time_hours', 'iter_meter_data', 'iter_meter_data_hours', 'iter_sensor', 'iter_sensor_hours', 'iter_sensor_insertions', 'iter_sensor_insertions_hours', 'iter_user_event_data', 'iter_user_event_data_hours', 'meter_data', 'scan', 'sensor', 'sensor_insertions', 'user_event_data')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report invoke last [K_four_hout[Krs[K[K[K[K[Kcgm_hours.json
usage: openaps-report invoke [-h]
                             {last_four_pump_hours.json}
                             [{last_four_pump_hours.json} ...]
openaps-report invoke: error: argument report: invalid choice: 'last_four_cgm_hours.json' (choose from u'last_four_pump_hours.json')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report show
veo://JSON/iter_pump_hours/last_four_pump_hours.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m car last_[K[K[K[K[K[K[Kt last [K)[K_four_hp[Kours.json
cat: last_four_hours.json: No such file or directory
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m cat last_four_hours.jsonphours.jsonuhours.jsonmhours.jsonphours.json_hours.json
[
  {
    "programmed": 2.0, 
    "_type": "Bolus", 
    "_description": "Bolus 2016-04-22T14:01:08 head[8], body[0] op[0x01]", 
    "timestamp": "2016-04-22T14:01:08", 
    "_body": "", 
    "_head": "0100500050000000", 
    "amount": 2.0, 
    "unabsorbed": 0.0, 
    "duration": 0, 
    "type": "normal", 
    "_date": "48014e7610"
  }
]]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps invoke repor[K[K[K[K[K[K[K[K[K[K[K[Kreport invoke last_fpur[K[K[Koru_[K[K[Ko[Kur_pump_hours.json
veo://JSON/iter_pump_hours/last_four_pump_hours.json
reporting last_four_pump_hours.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps use cgm iter_glucose 200
[
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T21:10:31", 
    "display_time": "2016-04-22T15:10:57", 
    "glucose": 165
  }, 
  {
    "trend_arrow": "45_DOWN", 
    "system_time": "2016-04-22T21:05:30", 
    "display_time": "2016-04-22T15:05:56", 
    "glucose": 163
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T21:00:30", 
    "display_time": "2016-04-22T15:00:56", 
    "glucose": 164
  }, 
  {
    "trend_arrow": "45_DOWN", 
    "system_time": "2016-04-22T20:55:30", 
    "display_time": "2016-04-22T14:55:56", 
    "glucose": 163
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T20:50:30", 
    "display_time": "2016-04-22T14:50:56", 
    "glucose": 179
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T20:45:30", 
    "display_time": "2016-04-22T14:45:56", 
    "glucose": 183
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T20:40:30", 
    "display_time": "2016-04-22T14:40:56", 
    "glucose": 184
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T20:35:30", 
    "display_time": "2016-04-22T14:35:56", 
    "glucose": 183
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T20:30:30", 
    "display_time": "2016-04-22T14:30:56", 
    "glucose": 184
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T20:25:30", 
    "display_time": "2016-04-22T14:25:56", 
    "glucose": 187
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T20:20:30", 
    "display_time": "2016-04-22T14:20:56", 
    "glucose": 189
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T20:15:30", 
    "display_time": "2016-04-22T14:15:56", 
    "glucose": 189
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T20:10:30", 
    "display_time": "2016-04-22T14:10:56", 
    "glucose": 191
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T20:05:30", 
    "display_time": "2016-04-22T14:05:56", 
    "glucose": 192
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T20:00:30", 
    "display_time": "2016-04-22T14:00:56", 
    "glucose": 185
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T19:55:30", 
    "display_time": "2016-04-22T13:55:56", 
    "glucose": 189
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T19:50:30", 
    "display_time": "2016-04-22T13:50:56", 
    "glucose": 188
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T19:45:30", 
    "display_time": "2016-04-22T13:45:56", 
    "glucose": 186
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T19:40:30", 
    "display_time": "2016-04-22T13:40:56", 
    "glucose": 185
  }, 
  {
    "trend_arrow": "45_UP", 
    "system_time": "2016-04-22T19:35:30", 
    "display_time": "2016-04-22T13:35:56", 
    "glucose": 183
  }, 
  {
    "trend_arrow": "45_UP", 
    "system_time": "2016-04-22T19:30:30", 
    "display_time": "2016-04-22T13:30:56", 
    "glucose": 180
  }, 
  {
    "trend_arrow": "SINGLE_UP", 
    "system_time": "2016-04-22T19:25:30", 
    "display_time": "2016-04-22T13:25:56", 
    "glucose": 177
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T19:20:30", 
    "display_time": "2016-04-22T13:20:56", 
    "glucose": 170
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T19:15:30", 
    "display_time": "2016-04-22T13:15:56", 
    "glucose": 157
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T19:10:30", 
    "display_time": "2016-04-22T13:10:56", 
    "glucose": 140
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T19:05:31", 
    "display_time": "2016-04-22T13:05:57", 
    "glucose": 124
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T19:00:30", 
    "display_time": "2016-04-22T13:00:56", 
    "glucose": 116
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T18:55:31", 
    "display_time": "2016-04-22T12:55:57", 
    "glucose": 115
  }, 
  {
    "trend_arrow": "45_DOWN", 
    "system_time": "2016-04-22T18:50:31", 
    "display_time": "2016-04-22T12:50:57", 
    "glucose": 108
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T18:45:31", 
    "display_time": "2016-04-22T12:45:57", 
    "glucose": 120
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T18:40:31", 
    "display_time": "2016-04-22T12:40:57", 
    "glucose": 121
  }, 
  {
    "trend_arrow": "45_DOWN", 
    "system_time": "2016-04-22T18:35:31", 
    "display_time": "2016-04-22T12:35:57", 
    "glucose": 123
  }, 
  {
    "trend_arrow": "45_DOWN", 
    "system_time": "2016-04-22T18:30:31", 
    "display_time": "2016-04-22T12:30:57", 
    "glucose": 135
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T18:25:31", 
    "display_time": "2016-04-22T12:25:57", 
    "glucose": 140
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T18:20:31", 
    "display_time": "2016-04-22T12:20:57", 
    "glucose": 147
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T18:15:31", 
    "display_time": "2016-04-22T12:15:57", 
    "glucose": 154
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T18:10:31", 
    "display_time": "2016-04-22T12:10:57", 
    "glucose": 162
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T18:05:31", 
    "display_time": "2016-04-22T12:05:57", 
    "glucose": 170
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T18:00:31", 
    "display_time": "2016-04-22T12:00:57", 
    "glucose": 179
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T17:55:31", 
    "display_time": "2016-04-22T11:55:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T17:50:31", 
    "display_time": "2016-04-22T11:50:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T17:45:31", 
    "display_time": "2016-04-22T11:45:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T17:40:31", 
    "display_time": "2016-04-22T11:40:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T17:35:31", 
    "display_time": "2016-04-22T11:35:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T17:30:31", 
    "display_time": "2016-04-22T11:30:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T17:25:31", 
    "display_time": "2016-04-22T11:25:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T17:20:31", 
    "display_time": "2016-04-22T11:20:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T17:15:31", 
    "display_time": "2016-04-22T11:15:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T17:10:31", 
    "display_time": "2016-04-22T11:10:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T17:05:31", 
    "display_time": "2016-04-22T11:05:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T17:00:31", 
    "display_time": "2016-04-22T11:00:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T16:55:31", 
    "display_time": "2016-04-22T10:55:57", 
    "glucose": 9
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T16:50:31", 
    "display_time": "2016-04-22T10:50:57", 
    "glucose": 9
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T16:45:31", 
    "display_time": "2016-04-22T10:45:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T16:40:31", 
    "display_time": "2016-04-22T10:40:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T16:35:31", 
    "display_time": "2016-04-22T10:35:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T16:30:31", 
    "display_time": "2016-04-22T10:30:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T16:25:31", 
    "display_time": "2016-04-22T10:25:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T16:20:31", 
    "display_time": "2016-04-22T10:20:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T16:15:31", 
    "display_time": "2016-04-22T10:15:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T16:10:31", 
    "display_time": "2016-04-22T10:10:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T16:05:31", 
    "display_time": "2016-04-22T10:05:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T16:00:31", 
    "display_time": "2016-04-22T10:00:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T15:55:31", 
    "display_time": "2016-04-22T09:55:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T15:50:31", 
    "display_time": "2016-04-22T09:50:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T15:40:31", 
    "display_time": "2016-04-22T09:40:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T15:35:31", 
    "display_time": "2016-04-22T09:35:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T15:30:31", 
    "display_time": "2016-04-22T09:30:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T15:25:32", 
    "display_time": "2016-04-22T09:25:58", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T15:20:31", 
    "display_time": "2016-04-22T09:20:57", 
    "glucose": 10
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T15:15:31", 
    "display_time": "2016-04-22T09:15:57", 
    "glucose": 9
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T15:10:31", 
    "display_time": "2016-04-22T09:10:57", 
    "glucose": 198
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T15:05:31", 
    "display_time": "2016-04-22T09:05:57", 
    "glucose": 204
  }, 
  {
    "trend_arrow": "45_UP", 
    "system_time": "2016-04-22T15:00:31", 
    "display_time": "2016-04-22T09:00:57", 
    "glucose": 201
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T14:55:31", 
    "display_time": "2016-04-22T08:55:57", 
    "glucose": 191
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T14:50:31", 
    "display_time": "2016-04-22T08:50:57", 
    "glucose": 184
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T14:45:31", 
    "display_time": "2016-04-22T08:45:57", 
    "glucose": 182
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T14:40:31", 
    "display_time": "2016-04-22T08:40:57", 
    "glucose": 183
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T14:35:31", 
    "display_time": "2016-04-22T08:35:57", 
    "glucose": 185
  }, 
  {
    "trend_arrow": "45_DOWN", 
    "system_time": "2016-04-22T14:30:31", 
    "display_time": "2016-04-22T08:30:57", 
    "glucose": 187
  }, 
  {
    "trend_arrow": "45_DOWN", 
    "system_time": "2016-04-22T14:30:31", 
    "display_time": "2016-04-22T08:30:57", 
    "glucose": 183
  }, 
  {
    "trend_arrow": "45_DOWN", 
    "system_time": "2016-04-22T14:25:31", 
    "display_time": "2016-04-22T08:25:57", 
    "glucose": 187
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T14:20:31", 
    "display_time": "2016-04-22T08:20:57", 
    "glucose": 141
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T14:15:31", 
    "display_time": "2016-04-22T08:15:57", 
    "glucose": 146
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T14:10:31", 
    "display_time": "2016-04-22T08:10:57", 
    "glucose": 150
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T14:05:31", 
    "display_time": "2016-04-22T08:05:57", 
    "glucose": 150
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T14:00:31", 
    "display_time": "2016-04-22T08:00:57", 
    "glucose": 151
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T13:55:31", 
    "display_time": "2016-04-22T07:55:57", 
    "glucose": 152
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T13:50:31", 
    "display_time": "2016-04-22T07:50:57", 
    "glucose": 151
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T13:45:31", 
    "display_time": "2016-04-22T07:45:57", 
    "glucose": 148
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T13:40:32", 
    "display_time": "2016-04-22T07:40:58", 
    "glucose": 144
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T13:35:31", 
    "display_time": "2016-04-22T07:35:57", 
    "glucose": 144
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T13:30:31", 
    "display_time": "2016-04-22T07:30:57", 
    "glucose": 142
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T13:25:31", 
    "display_time": "2016-04-22T07:25:57", 
    "glucose": 140
  }, 
  {
    "trend_arrow": "45_UP", 
    "system_time": "2016-04-22T13:20:31", 
    "display_time": "2016-04-22T07:20:57", 
    "glucose": 138
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T13:15:31", 
    "display_time": "2016-04-22T07:15:57", 
    "glucose": 134
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T13:10:31", 
    "display_time": "2016-04-22T07:10:57", 
    "glucose": 130
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T13:05:32", 
    "display_time": "2016-04-22T07:05:58", 
    "glucose": 127
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T13:00:32", 
    "display_time": "2016-04-22T07:00:58", 
    "glucose": 120
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T12:55:32", 
    "display_time": "2016-04-22T06:55:58", 
    "glucose": 119
  }, 
  {
    "trend_arrow": "45_UP", 
    "system_time": "2016-04-22T12:50:32", 
    "display_time": "2016-04-22T06:50:58", 
    "glucose": 118
  }, 
  {
    "trend_arrow": "45_UP", 
    "system_time": "2016-04-22T12:45:32", 
    "display_time": "2016-04-22T06:45:58", 
    "glucose": 117
  }, 
  {
    "trend_arrow": "SINGLE_UP", 
    "system_time": "2016-04-22T12:40:32", 
    "display_time": "2016-04-22T06:40:58", 
    "glucose": 113
  }, 
  {
    "trend_arrow": "SINGLE_UP", 
    "system_time": "2016-04-22T12:35:32", 
    "display_time": "2016-04-22T06:35:58", 
    "glucose": 107
  }, 
  {
    "trend_arrow": "SINGLE_UP", 
    "system_time": "2016-04-22T12:30:32", 
    "display_time": "2016-04-22T06:30:58", 
    "glucose": 111
  }, 
  {
    "trend_arrow": "SINGLE_UP", 
    "system_time": "2016-04-22T12:25:32", 
    "display_time": "2016-04-22T06:25:58", 
    "glucose": 104
  }, 
  {
    "trend_arrow": "SINGLE_UP", 
    "system_time": "2016-04-22T12:20:32", 
    "display_time": "2016-04-22T06:20:58", 
    "glucose": 94
  }, 
  {
    "trend_arrow": "45_UP", 
    "system_time": "2016-04-22T12:15:32", 
    "display_time": "2016-04-22T06:15:58", 
    "glucose": 83
  }, 
  {
    "trend_arrow": "45_UP", 
    "system_time": "2016-04-22T12:10:32", 
    "display_time": "2016-04-22T06:10:58", 
    "glucose": 74
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T12:05:32", 
    "display_time": "2016-04-22T06:05:58", 
    "glucose": 64
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T12:00:32", 
    "display_time": "2016-04-22T06:00:58", 
    "glucose": 59
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T11:55:32", 
    "display_time": "2016-04-22T05:55:58", 
    "glucose": 56
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T11:50:32", 
    "display_time": "2016-04-22T05:50:58", 
    "glucose": 52
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T11:45:32", 
    "display_time": "2016-04-22T05:45:58", 
    "glucose": 48
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T11:40:32", 
    "display_time": "2016-04-22T05:40:58", 
    "glucose": 45
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T11:35:32", 
    "display_time": "2016-04-22T05:35:58", 
    "glucose": 41
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T11:30:32", 
    "display_time": "2016-04-22T05:30:58", 
    "glucose": 41
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T11:25:32", 
    "display_time": "2016-04-22T05:25:58", 
    "glucose": 40
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T11:20:32", 
    "display_time": "2016-04-22T05:20:58", 
    "glucose": 40
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T11:15:32", 
    "display_time": "2016-04-22T05:15:58", 
    "glucose": 40
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T11:10:32", 
    "display_time": "2016-04-22T05:10:58", 
    "glucose": 41
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T11:05:32", 
    "display_time": "2016-04-22T05:05:58", 
    "glucose": 42
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T11:00:32", 
    "display_time": "2016-04-22T05:00:58", 
    "glucose": 43
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T10:55:32", 
    "display_time": "2016-04-22T04:55:58", 
    "glucose": 44
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T10:50:32", 
    "display_time": "2016-04-22T04:50:58", 
    "glucose": 46
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T10:45:32", 
    "display_time": "2016-04-22T04:45:58", 
    "glucose": 47
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T10:40:32", 
    "display_time": "2016-04-22T04:40:58", 
    "glucose": 50
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T10:35:32", 
    "display_time": "2016-04-22T04:35:58", 
    "glucose": 48
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T10:30:32", 
    "display_time": "2016-04-22T04:30:58", 
    "glucose": 57
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T10:25:32", 
    "display_time": "2016-04-22T04:25:58", 
    "glucose": 59
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T10:20:32", 
    "display_time": "2016-04-22T04:20:58", 
    "glucose": 60
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T10:15:32", 
    "display_time": "2016-04-22T04:15:58", 
    "glucose": 61
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T10:10:32", 
    "display_time": "2016-04-22T04:10:58", 
    "glucose": 63
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T10:05:32", 
    "display_time": "2016-04-22T04:05:58", 
    "glucose": 65
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T10:00:32", 
    "display_time": "2016-04-22T04:00:58", 
    "glucose": 65
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T09:55:32", 
    "display_time": "2016-04-22T03:55:58", 
    "glucose": 67
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T09:50:32", 
    "display_time": "2016-04-22T03:50:58", 
    "glucose": 68
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T09:45:32", 
    "display_time": "2016-04-22T03:45:58", 
    "glucose": 71
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T09:40:32", 
    "display_time": "2016-04-22T03:40:58", 
    "glucose": 74
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T09:35:32", 
    "display_time": "2016-04-22T03:35:58", 
    "glucose": 76
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T09:30:32", 
    "display_time": "2016-04-22T03:30:58", 
    "glucose": 79
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T09:25:32", 
    "display_time": "2016-04-22T03:25:58", 
    "glucose": 80
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T09:20:32", 
    "display_time": "2016-04-22T03:20:58", 
    "glucose": 81
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T09:15:32", 
    "display_time": "2016-04-22T03:15:58", 
    "glucose": 83
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T09:10:32", 
    "display_time": "2016-04-22T03:10:58", 
    "glucose": 84
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T09:05:32", 
    "display_time": "2016-04-22T03:05:58", 
    "glucose": 87
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T09:00:32", 
    "display_time": "2016-04-22T03:00:58", 
    "glucose": 91
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T08:55:32", 
    "display_time": "2016-04-22T02:55:58", 
    "glucose": 94
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T08:50:32", 
    "display_time": "2016-04-22T02:50:58", 
    "glucose": 104
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T08:45:32", 
    "display_time": "2016-04-22T02:45:58", 
    "glucose": 109
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T08:40:32", 
    "display_time": "2016-04-22T02:40:58", 
    "glucose": 113
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T08:35:32", 
    "display_time": "2016-04-22T02:35:58", 
    "glucose": 117
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T08:30:32", 
    "display_time": "2016-04-22T02:30:58", 
    "glucose": 119
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T08:25:32", 
    "display_time": "2016-04-22T02:25:58", 
    "glucose": 120
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T08:20:32", 
    "display_time": "2016-04-22T02:20:58", 
    "glucose": 117
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T08:15:32", 
    "display_time": "2016-04-22T02:15:58", 
    "glucose": 110
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T08:10:32", 
    "display_time": "2016-04-22T02:10:58", 
    "glucose": 98
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T08:05:32", 
    "display_time": "2016-04-22T02:05:58", 
    "glucose": 78
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T08:00:32", 
    "display_time": "2016-04-22T02:00:58", 
    "glucose": 55
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T07:55:32", 
    "display_time": "2016-04-22T01:55:58", 
    "glucose": 39
  }, 
  {
    "trend_arrow": "NOT_COMPUTABLE", 
    "system_time": "2016-04-22T07:50:32", 
    "display_time": "2016-04-22T01:50:58", 
    "glucose": 39
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T07:45:32", 
    "display_time": "2016-04-22T01:45:58", 
    "glucose": 39
  }, 
  {
    "trend_arrow": "45_DOWN", 
    "system_time": "2016-04-22T07:40:32", 
    "display_time": "2016-04-22T01:40:58", 
    "glucose": 39
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T07:35:32", 
    "display_time": "2016-04-22T01:35:58", 
    "glucose": 39
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T07:30:32", 
    "display_time": "2016-04-22T01:30:58", 
    "glucose": 39
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T07:25:32", 
    "display_time": "2016-04-22T01:25:58", 
    "glucose": 40
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T07:20:32", 
    "display_time": "2016-04-22T01:20:58", 
    "glucose": 45
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T07:15:32", 
    "display_time": "2016-04-22T01:15:58", 
    "glucose": 49
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T07:10:32", 
    "display_time": "2016-04-22T01:10:58", 
    "glucose": 54
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T07:05:33", 
    "display_time": "2016-04-22T01:05:59", 
    "glucose": 59
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T07:00:33", 
    "display_time": "2016-04-22T01:00:59", 
    "glucose": 64
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T06:55:33", 
    "display_time": "2016-04-22T00:55:59", 
    "glucose": 67
  }, 
  {
    "trend_arrow": "45_UP", 
    "system_time": "2016-04-22T06:50:33", 
    "display_time": "2016-04-22T00:50:59", 
    "glucose": 67
  }, 
  {
    "trend_arrow": "45_UP", 
    "system_time": "2016-04-22T06:45:33", 
    "display_time": "2016-04-22T00:45:59", 
    "glucose": 64
  }, 
  {
    "trend_arrow": "45_UP", 
    "system_time": "2016-04-22T06:40:33", 
    "display_time": "2016-04-22T00:40:59", 
    "glucose": 57
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T06:35:33", 
    "display_time": "2016-04-22T00:35:59", 
    "glucose": 49
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T06:30:33", 
    "display_time": "2016-04-22T00:30:59", 
    "glucose": 43
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T06:25:33", 
    "display_time": "2016-04-22T00:25:59", 
    "glucose": 39
  }, 
  {
    "trend_arrow": "45_DOWN", 
    "system_time": "2016-04-22T06:20:33", 
    "display_time": "2016-04-22T00:20:59", 
    "glucose": 40
  }, 
  {
    "trend_arrow": "45_DOWN", 
    "system_time": "2016-04-22T06:15:33", 
    "display_time": "2016-04-22T00:15:59", 
    "glucose": 45
  }, 
  {
    "trend_arrow": "45_DOWN", 
    "system_time": "2016-04-22T06:10:33", 
    "display_time": "2016-04-22T00:10:59", 
    "glucose": 51
  }, 
  {
    "trend_arrow": "45_DOWN", 
    "system_time": "2016-04-22T06:05:33", 
    "display_time": "2016-04-22T00:05:59", 
    "glucose": 57
  }, 
  {
    "trend_arrow": "45_DOWN", 
    "system_time": "2016-04-22T06:00:33", 
    "display_time": "2016-04-22T00:00:59", 
    "glucose": 63
  }, 
  {
    "trend_arrow": "45_DOWN", 
    "system_time": "2016-04-22T05:55:33", 
    "display_time": "2016-04-21T23:55:59", 
    "glucose": 70
  }, 
  {
    "trend_arrow": "45_DOWN", 
    "system_time": "2016-04-22T05:50:33", 
    "display_time": "2016-04-21T23:50:59", 
    "glucose": 76
  }, 
  {
    "trend_arrow": "45_DOWN", 
    "system_time": "2016-04-22T05:45:33", 
    "display_time": "2016-04-21T23:45:59", 
    "glucose": 83
  }, 
  {
    "trend_arrow": "45_DOWN", 
    "system_time": "2016-04-22T05:40:33", 
    "display_time": "2016-04-21T23:40:59", 
    "glucose": 90
  }, 
  {
    "trend_arrow": "45_DOWN", 
    "system_time": "2016-04-22T05:35:33", 
    "display_time": "2016-04-21T23:35:59", 
    "glucose": 95
  }, 
  {
    "trend_arrow": "45_DOWN", 
    "system_time": "2016-04-22T05:30:33", 
    "display_time": "2016-04-21T23:30:59", 
    "glucose": 98
  }, 
  {
    "trend_arrow": "45_DOWN", 
    "system_time": "2016-04-22T05:25:33", 
    "display_time": "2016-04-21T23:25:59", 
    "glucose": 104
  }, 
  {
    "trend_arrow": "45_DOWN", 
    "system_time": "2016-04-22T05:20:33", 
    "display_time": "2016-04-21T23:20:59", 
    "glucose": 110
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T05:15:33", 
    "display_time": "2016-04-21T23:15:59", 
    "glucose": 116
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T05:10:33", 
    "display_time": "2016-04-21T23:10:59", 
    "glucose": 122
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T05:05:33", 
    "display_time": "2016-04-21T23:05:59", 
    "glucose": 128
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T05:00:33", 
    "display_time": "2016-04-21T23:00:59", 
    "glucose": 130
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T04:55:33", 
    "display_time": "2016-04-21T22:55:59", 
    "glucose": 130
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T04:50:33", 
    "display_time": "2016-04-21T22:50:59", 
    "glucose": 129
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T04:45:33", 
    "display_time": "2016-04-21T22:45:59", 
    "glucose": 129
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T04:40:33", 
    "display_time": "2016-04-21T22:40:59", 
    "glucose": 131
  }, 
  {
    "trend_arrow": "FLAT", 
    "system_time": "2016-04-22T04:35:33", 
    "display_time": "2016-04-21T22:35:59", 
    "glucose": 134
  }
]]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m opena[K[Knaps report add last_four_cgm_hpurs[K[K[K[Kous.json JSON veo  itre_cgm[K[K[Kglucose 200 [1P[1P[1@e[1@r
added veo://JSON/iter_glucose/last_four_cgm_hous.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report invoke last_fpour[K[K[K[Kour_cgm_hours,json[1Pjson.json
usage: openaps-report invoke [-h]
                             {last_four_cgm_hous.json,last_four_pump_hours.json}
                             [{last_four_cgm_hous.json,last_four_pump_hours.json} ...]
openaps-report invoke: error: argument report: invalid choice: 'last_four_cgm_hours.json' (choose from u'last_four_cgm_hous.json', u'last_four_pump_hours.json')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report invoke last_four_cgm_hours.json[1Ps.json
veo://JSON/iter_glucose/last_four_cgm_hous.json
reporting last_four_cgm_hous.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report show
veo://JSON/iter_pump_hours/last_four_pump_hours.json
veo://JSON/iter_glucose/last_four_cgm_hous.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report rename last_g[Kfpur[K[K[K[K[K[K[K[K[K-h
usage: openaps-report [-h] [--version] {add,remove,show,invoke} ...
openaps-report: error: argument action: invalid choice: 'rename' (choose from 'add', 'remove', 'show', 'invoke')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m ap[K[Kopenaps report remove last_g[Kfpur_ch[Kgm_hp[Kous.json
usage: openaps-report remove [-h]
                             {last_four_cgm_hous.json,last_four_pump_hours.json}
openaps-report remove: error: argument report: invalid choice: 'last_fpur_cgm_hous.json' (choose from u'last_four_cgm_hous.json', u'last_four_pump_hours.json')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report remove last_fpur_cgm_hous.json[C[1Pur_cgm_hous.jsonour_cgm_hous.json
removed veo://JSON/iter_glucose/last_four_cgm_hous.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add last_four_cgm_hp[Kours.json JSON ve[K[Kcgm  iter_glucose 200
added cgm://JSON/iter_glucose/last_four_cgm_hours.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report show
veo://JSON/iter_pump_hours/last_four_pump_hours.json
cgm://JSON/iter_glucose/last_four_cgm_hours.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report invoke last_fpur_[K[K[K[Kour_cgm_hpurs[K[K[K[Kours.json
cgm://JSON/iter_glucose/last_four_cgm_hours.json
reporting last_four_cgm_hours.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps alias add last [K-four[K[K[K[K[K_four_hours "report invoke las t_four_pump_g[Khp[Kours.json last_four_cgm_hours.json"
added last_four_hours report invoke last_four_pump_hours.json last_four_cgm_hours.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps last_fpur_[K[K[K[Kour_hours
veo://JSON/iter_pump_hours/last_four_pump_hours.json
reporting last_four_pump_hours.json
cgm://JSON/iter_glucose/last_four_cgm_hours.json
reporting last_four_cgm_hours.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps s[Kuse veo Rea[K[K[Kread-[K_batery_status
usage: openaps-use veo [-h] USAGE ...
openaps-use veo: error: argument USAGE: invalid choice: 'read_batery_status' (choose from 'Session', 'bolus', 'filter_glucose_date', 'filter_isig_date', 'iter_glucose', 'iter_glucose_hours', 'iter_pump', 'iter_pump_hours', 'model', 'mytest', 'read_basal_profile_A', 'read_basal_profile_B', 'read_basal_profile_std', 'read_battery_status', 'read_bg_targets', 'read_carb_ratios', 'read_clock', 'read_current_glucose_pages', 'read_current_history_pages', 'read_glucose_data', 'read_history_data', 'read_insulin_sensitivies', 'read_insulin_sensitivities', 'read_selected_basal_profile', 'read_settings', 'read_status', 'read_temp_basal', 'reservoir', 'resume_pump', 'scan', 'set_temp_basal', 'settings', 'status', 'suspend_pump')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps use veo read_batery_status[1P[1@-
usage: openaps-use veo [-h] USAGE ...
openaps-use veo: error: argument USAGE: invalid choice: 'read_batery_status' (choose from 'Session', 'bolus', 'filter_glucose_date', 'filter_isig_date', 'iter_glucose', 'iter_glucose_hours', 'iter_pump', 'iter_pump_hours', 'model', 'mytest', 'read_basal_profile_A', 'read_basal_profile_B', 'read_basal_profile_std', 'read_battery_status', 'read_bg_targets', 'read_carb_ratios', 'read_clock', 'read_current_glucose_pages', 'read_current_history_pages', 'read_glucose_data', 'read_history_data', 'read_insulin_sensitivies', 'read_insulin_sensitivities', 'read_selected_basal_profile', 'read_settings', 'read_status', 'read_temp_basal', 'reservoir', 'resume_pump', 'scan', 'set_temp_basal', 'settings', 'status', 'suspend_pump')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps-use veo read_batery_status[1P read_batery_status[1P read_batery_status[1P read_batery_statusp read_batery_statusu read_batery_statusm read_batery_statusp read_batery_status
usage: openaps-use [-h] [--format {text,json,base,stdout}] [--output OUTPUT]
                   [--version]
                   device ...
openaps-use: error: argument device: invalid choice: 'pump' (choose from u'cgm', u'veo')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps-use pump read_batery_status[1Pveo[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ctery_status
{
  "status": "normal", 
  "voltage": 1.34
}]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m 
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m nano `[K~/.profile
[?1049h[1;24r(B[m[4l[?7h[?12l[?25h[?1h=[?1h=[?1h=[39;49m[39;49m(B[m[H[2J(B[0;7m  GNU nano 2.2.6           File: /home/pi/.profile                              [3;1H(B[m# ~/.profile: executed by the command interpreter for login shells.[4d# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login[5d# exists.[6d# see /usr/share/doc/bash/examples/startup-files for examples.[7d# the files are located in the bash-doc package.[9d# the default umask is set in /etc/profile; for setting the umask[10d# for ssh logins, install and configure the libpam-umask package.[11d#umask 022[13d# if running bash[14dif [ -n "$BASH_VERSION" ]; then[15;5H# include .bashrc if it exists[16;5Hif [ -f "$HOME/.bashrc" ]; then[17;9H. "$HOME/.bashrc"[18;5Hfi[19dfi[21d# set PATH so it includes user's private bin if it exists[22;32H(B[0;7m[ Read 24 lines ][23d^G(B[m Get Help  (B[0;7m^O(B[m WriteOut  (B[0;7m^R(B[m Read File (B[0;7m^Y(B[m Prev Page (B[0;7m^K(B[m Cut Text  (B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit[14G(B[0;7m^J(B[m Justify   (B[0;7m^W(B[m Where Is  (B[0;7m^V(B[m Next Page (B[0;7m^U(B[m UnCut Text(B[0;7m^T(B[m To Spell[3d[4d[5d[6d[7d[8d[9d[10d[11d[12d[13d[14d[15d[16d[17d[18d[19d[20d[21d7[2;21r8[10S[1;24r[12;1Hif [ -d "$HOME/bin" ] ; then[13;5HPATH="$HOME/bin:$PATH"[14dfi[15dNIGHTSCOUT_HOST=https://xpucudev.azurewebsites.net; export NIGHTSCOUT_HOST[16dAPI_SECRET=e5fd259c0b0ff64d9ae00dce00d0a6a67cfe8861; export API_SECRET[12d[13d[14d[15d[16d[17d[22d[K[17d[23d[J[24;80H[24;1H[?1049l[?1l>]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps device add ns-status process --require "cloc k iob suggested enacted battery reservoir status" ns-status 
added process://ns-status/ns-status/
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report show
veo://JSON/iter_pump_hours/last_four_pump_hours.json
cgm://JSON/iter_glucose/last_four_cgm_hours.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps alias add status-upload '! bash -c "openaps  report invoke monitor/upload-status.json && ns-upload $NIGHTSCOUT_HOST $API_SECR ET devicestatus.json monitor/upload-status.json"'
added status-upload ! bash -c "openaps report invoke monitor/upload-status.json && ns-upload $NIGHTSCOUT_HOST $API_SECRET devicestatus.json monitor/upload-status.json"
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps alias add status-upload '! bash -c "openaps  report invoke monitor/upload-status.json && ns-upload $NIGHTSCOUT_HOST $API_SECR ET devicestatus.json monitor/upload-status.json"'
added status-upload ! bash -c "openaps report invoke monitor/upload-status.json && ns-upload $NIGHTSCOUT_HOST $API_SECRET devicestatus.json monitor/upload-status.json"
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps vendor add openasp[K[Kpscontrib.times[Kzones
added openapscontrib.timezones://
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps device add tz times[Kzones
added timezones://tz
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m git add tz.ini
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add monitor/clock-zoned.json JSON tz  clock monitor/clock.json
added tz://JSON/clock/monitor/clock-zoned.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report show monitor/iob.json --json | json
usage: openaps-report show [-h] [--ini] [--json]
                           [{last_four_cgm_hours.json,last_four_pump_hours.json,monitor/clock-zoned.json,*}]
openaps-report show: error: argument report: invalid choice: 'monitor/iob.json' (choose from u'last_four_cgm_hours.json', u'last_four_pump_hours.json', u'monitor/clock-zoned.json', '*')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [K]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m pena[K[K[K[Kopenaps status-upload
usage: openaps-report invoke [-h]
                             {last_four_cgm_hours.json,last_four_pump_hours.json,monitor/clock-zoned.json}
                             [{last_four_cgm_hours.json,last_four_pump_hours.json,monitor/clock-zoned.json} ...]
openaps-report invoke: error: argument report: invalid choice: 'monitor/upload-status.json' (choose from u'last_four_cgm_hours.json', u'last_four_pump_hours.json', u'monitor/clock-zoned.json')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps ns-status -h
openaps: 'ns-status' is not an openaps command. See 'openaps --help'.
        
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m ns-status -h
usage:  [ 'node', '/usr/local/bin/ns-status' ] <clock.json> <iob.json> <suggested.json> <enacted.json> <battery.json> <reservoir.json> <status.json>
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps use pump read_clock
usage: openaps-use [-h] [--format {text,json,base,stdout}] [--output OUTPUT]
                   [--version]
                   device ...
openaps-use: error: argument device: invalid choice: 'pump' (choose from u'cgm', u'ns-status', u'tz', u'veo')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps use pump read_clock[1P[C[1P read_clock[1P read_clock[1P read_clockv read_clocke read_clocko read_clock
"2016-04-22T16:58:01"]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m 
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add read_clock.json JSON veo read_clock
added veo://JSON/read_clock/read_clock.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add broken-report.json veo read_clock
usage: openaps-report add [-h] report {base,text,stdout,JSON} device ...
openaps-report add: error: argument reporter: invalid choice: 'veo' (choose from 'base', 'text', 'stdout', 'JSON')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report invoke read_clock.json
veo://JSON/read_clock/read_clock.json
reporting read_clock.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openapr[Ks report show monitor/iob.json --json | json
usage: openaps-report show [-h] [--ini] [--json]
                           [{last_four_cgm_hours.json,last_four_pump_hours.json,monitor/clock-zoned.json,read_clock.json,*}]
openaps-report show: error: argument report: invalid choice: 'monitor/iob.json' (choose from u'last_four_cgm_hours.json', u'last_four_pump_hours.json', u'monitor/clock-zoned.json', u'read_clock.json', '*')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m sudo easy_install -zu [K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Ksudo easy_install -ZU openaps
Searching for openaps
Reading https://pypi.python.org/simple/openaps/
Best match: openaps 0.0.10
Downloading https://pypi.python.org/packages/2.7/o/openaps/openaps-0.0.10-py2.7.egg#md5=a4036f2eafb4a0a38701c6cb4ed1b5fe
Processing openaps-0.0.10-py2.7.egg
removing '/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg' (and everything under it)
creating /usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg
Extracting openaps-0.0.10-py2.7.egg to /usr/local/lib/python2.7/dist-packages
openaps 0.0.10 is already the active version in easy-install.pth
Installing openaps-import script to /usr/local/bin
Installing openaps-alias script to /usr/local/bin
Installing openaps-install-udev-rules script to /usr/local/bin
Installing openaps-vendor script to /usr/local/bin
Installing git-openaps-init script to /usr/local/bin
Installing openaps script to /usr/local/bin
Installing openaps-report script to /usr/local/bin
Installing openaps-device script to /usr/local/bin
Installing openaps-use script to /usr/local/bin

Installed /usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg
Processing dependencies for openaps
Finished processing dependencies for openaps
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m sudo easy_install -ZU openapsopenaps report show monitor/iob.json --json | json
usage: openaps-report show [-h] [--ini] [--json]
                           [{last_four_cgm_hours.json,last_four_pump_hours.json,monitor/clock-zoned.json,read_clock.json,*}]
openaps-report show: error: argument report: invalid choice: 'monitor/iob.json' (choose from u'last_four_cgm_hours.json', u'last_four_pump_hours.json', u'monitor/clock-zoned.json', u'read_clock.json', '*')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m opn[Kwnp[K[K[Kenp[Kaps dei[Kvice add oref0 process ored[Kf0
added process://oref0/oref0/
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps device add get-profile process --require "settings bg_target s insulin_sensitivities basal_profile max_iob" oref0 get-profile
added process://get-profile/oref0/get-profile
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps device add calculate-iob process --require "pumphistory prof ile clock" oref0 calculate-iob
added process://calculate-iob/oref0/calculate-iob
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps device add determine-basal process --require "iob temp_basal  glucose profile" oref0 determine-basal
added process://determine-basal/oref0/determine-basal
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m mkdir -p settings monitor enach[Kt
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add settings/settings.json JSON pump read_settings[1P read_settings[1P read_settings[1P read_settings[1P read_settingsv read_settingse read_settingso read_settings
added veo://JSON/read_settings/settings/settings.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add settings/bg_targets.json JSON pump read_bg_target s
^[[D^[[Dusage: openaps-report add [-h] report {base,text,stdout,JSON} device ...
openaps-report add: error: argument device: invalid choice: 'pump' (choose from u'calculate-iob', u'cgm', u'determine-basal', u'get-profile', u'ns-status', u'oref0', u'tz', u'veo')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add settings/bg_targets.json JSON pump read_bg_target s[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C read_bg_targets [K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P read_bg_targets
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P read_bg_targets[1P read_bg_targetsv read_bg_targetse read_bg_targetso read_bg_targets [A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

added veo://JSON/read_bg_targets/settings/bg_targets.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add settings/bg_targets.json JSON veo read_bg_targets [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Copenaps report add settings/insulin_sensitivities.json JSON pump rea d_insulin_sensitivies[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cp read_[1Pinsulin_sensitivies[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C read_i[1Pnsulin_sensitivies[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C read_in[1Psulin_sensitivies[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C read_ins[1Pulin_sensitivies[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cv read_insulin_sensitivies[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ce read_insulin_sensitivies[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Co read_insulin_sensitivies[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

added veo://JSON/read_insulin_sensitivies/settings/insulin_sensitivities.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add settings/basal_profile.json JSON pump read_basal_ profile_std[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C read_basal_pr[1Pofile_std[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C read_basal_pro[1Pfile_std[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C read_basal_prof[1Pile_std[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C read_basal_profi[1Ple_std[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cv read_basal_profile_std[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ce read_basal_profile_std[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Co read_basal_profile_std[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

added veo://JSON/read_basal_profile_std/settings/basal_profile.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add mas[Kx_iob.json JSON {"max_iob": 2}
usage: openaps-report add [-h] report {base,text,stdout,JSON} device ...
openaps-report add: error: argument device: invalid choice: '{max_iob:' (choose from u'calculate-iob', u'cgm', u'determine-basal', u'get-profile', u'ns-status', u'oref0', u'tz', u'veo')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add max_iob.json JSON {"max_iob": 2}[1@o[1@r[1@e[1@f[1@0[1@ 
usage: openaps-report add report {base,text,stdout,JSON} oref0 [-h] USAGE ...
openaps-report add report {base,text,stdout,JSON} oref0: error: argument USAGE: invalid choice: '{max_iob:' (choose from 'shell')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m which oref0-mint-max-iob
/usr/local/bin/oref0-mint-max-iob
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m nano max_iov[Kb.json
[?1049h[1;24r(B[m[4l[?7h[?12l[?25h[?1h=[?1h=[?1h=[39;49m[39;49m(B[m[H[2J(B[0;7m  GNU nano 2.2.6                  File: max_iob.json                                            [22;43H[ New File ][23d^G(B[m Get Help     (B[0;7m^O(B[m WriteOut     (B[0;7m^R(B[m Read File    (B[0;7m^Y(B[m Prev Page    (B[0;7m^K(B[m Cut Text     (B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit[24;17H(B[0;7m^J(B[m Justify[33G(B[0;7m^W(B[m Where Is     (B[0;7m^V(B[m Next Page    (B[0;7m^U(B[m UnCut Text   (B[0;7m^T(B[m To Spell[3d[1;87H(B[0;7mModified[4d(B[mcase $MAX_IOB in[5d""| help)[6;3Hhelp_message[7;3H;;[8d*)[9dcat <<EOF | json > $OUTPUT[10d{ "max_iob": $MAX_IOB }[11dEOF[12dtest "$OUTPUT" != '/dev/fd/1' && echo "max_iob $MAX_IOB saved in $OUTPUT"[13;3H;;[14desac[22d[K[17d[22d(B[0;7mSave modified buffer (ANSWERING "No" WILL DESTROY CHANGES) ?                                    [23;1H Y(B[m Yes[K[24d(B[0;7m N(B[m No  [24;18H(B[0;7mC(B[m Cancel[K[22;62H(B[0;7mFile Name to Write: max_iob.json                            [23d^G(B[m Get Help[23;25H(B[0;7mM-D(B[m DOS Format[23;49H(B[0;7mM-A(B[m Append[23;73H(B[0;7mM-B(B[m Backup File[24d(B[0;7m^C(B[m Cancel[17G        (B[0;7mM-M(B[m Mac Format[24;49H(B[0;7mM-P(B[m Prepend[22;33H[23d[39;49m(B[m[J[1;87H(B[0;7m        [4d(B[0m[32mcase[39m(B[m (B[0;1m[31m$MAX_IOB[39m(B[m [32min[5d(B[0;1m[33m""(B[0m[32m|[39m(B[m help[32m)[7;3H;;[8;2H)[9d(B[0;1m[34mcat[39m(B[m [32m<<[39m(B[mEOF [32m|[20G>[39m(B[m (B[0;1m[31m$OUTPUT[10d(B[0m[32m{[39m(B[m (B[0;1m[33m"max_iob"[39m(B[m: (B[0;1m[31m$MAX_IOB[39m(B[m [32m}[12;8H(B[0;1m[33m"$OUTPUT"[39m(B[m [32m!=[39m(B[m (B[0;1m[33m'/dev/fd/1'[39m(B[m [32m&&[39m(B[m (B[0;1m[34mecho[39m(B[m (B[0;1m[33m"max_iob $MAX_IOB saved in $OUTPUT"[13;3H(B[0m[32m;;[14desac[22;39H[39m(B[m[1K (B[0;7m[ Wrote 45 lines ](B[m[K[24;96H[24;1H[?1049l[?1l>]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps invoke[K[K[K[K[K[Kreport invoc[Kke max_iob.json
usage: openaps-report invoke [-h]
                             {last_four_cgm_hours.json,last_four_pump_hours.json,monitor/clock-zoned.json,read_clock.json,settings/basal_profile.json,settings/bg_targets.json,settings/insulin_sensitivities.json,settings/settings.json}
                             [{last_four_cgm_hours.json,last_four_pump_hours.json,monitor/clock-zoned.json,read_clock.json,settings/basal_profile.json,settings/bg_targets.json,settings/insulin_sensitivities.json,settings/settings.json} ...]
openaps-report invoke: error: argument report: invalid choice: 'max_iob.json' (choose from u'last_four_cgm_hours.json', u'last_four_pump_hours.json', u'monitor/clock-zoned.json', u'read_clock.json', u'settings/basal_profile.json', u'settings/bg_targets.json', u'settings/insulin_sensitivities.json', u'settings/settings.json')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report invoke max_iob.json[1P.json[1P.json[1P.json[1P.json[1P.json[1P.json[1P.json[1P.json[1P.json[1P.json[1P.json[1P.json[1P.json[1P.jsons.jsone.jsont.jsont.jsoni.jsonn.jsong.jsons.json/.jsons.jsone.jsont.jsont.jsoni.jsonn.jsong.jsons.jsonisettings/settings.jsonnsettings/settings.jsonvsettings/settings.jsonosettings/settings.jsonksettings/settings.jsonesettings/settings.json settings/settings.json
veo://JSON/read_settings/settings/settings.json
reporting settings/settings.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report invoke settings/bg_targets.json
veo://JSON/read_bg_targets/settings/bg_targets.json
reporting settings/bg_targets.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report invoke settings/bg_targets.json[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Ksettings/insulin_sensitivities.json
veo://JSON/read_insulin_sensitivies/settings/insulin_sensitivities.json
reporting settings/insulin_sensitivities.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report invoke settings/insulin_sensitivities.json[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kbasal_profile.json
veo://JSON/read_basal_profile_std/settings/basal_profile.json
reporting settings/basal_profile.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report invoke settings/basal_profile.json[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kettings/max_iob.json
usage: openaps-report invoke [-h]
                             {last_four_cgm_hours.json,last_four_pump_hours.json,monitor/clock-zoned.json,read_clock.json,settings/basal_profile.json,settings/bg_targets.json,settings/insulin_sensitivities.json,settings/settings.json}
                             [{last_four_cgm_hours.json,last_four_pump_hours.json,monitor/clock-zoned.json,read_clock.json,settings/basal_profile.json,settings/bg_targets.json,settings/insulin_sensitivities.json,settings/settings.json} ...]
openaps-report invoke: error: argument report: invalid choice: 'settings/max_iob.json' (choose from u'last_four_cgm_hours.json', u'last_four_pump_hours.json', u'monitor/clock-zoned.json', u'read_clock.json', u'settings/basal_profile.json', u'settings/bg_targets.json', u'settings/insulin_sensitivities.json', u'settings/settings.json')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m nano[K[K[K[Kopenaps report invoke settings/max_iob.jsonbasal_profile.jsoninsulin_sensitivities.json[11Pbg_targets.json[2Psettings.json[10Pmax_iob.json[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[17Pnano[C[C[C[C[C[C[C[C[C[C[C[C[C
[?1049h[1;24r(B[m[4l[?7h[?12l[?25h[?1h=[?1h=[?1h=[39;49m[39;49m(B[m[H[2J(B[0;7m  GNU nano 2.2.6                  File: max_iob.json                                            [3;1H(B[0m[36m#!/bin/bash[6d[39m(B[mself[32m=$([39m(B[mbasename (B[0;1m[31m$0(B[0m[32m)[7d[39m(B[mMAX_IOB[32m=(B[0;1m[31m${1-}[8d[39m(B[mOUTPUT[32m=(B[0;1m[31m${2-[39m(B[m/dev/fd/1[32m}[9dshift[11dfunction[39m(B[m help_message [32m([39m(B[m [32m)[39m(B[m [32m{[12;3H(B[0;1m[34mcat[39m(B[m [32m<<[39m(B[mEOF[13;3HUsage:[14d(B[0;1m[31m$self[39m(B[m max_iob [32m<[39m(B[mmax_iob[32m>[39m(B[m [32m[[39m(B[mmax_iob.json[32m][16d(B[0;1m[31m$self[39m(B[m help - this message[17dPrint a perfect max_iob.json.[20dExamples:[21d[32m$[39m(B[m (B[0;1m[31m$self[39m(B[m 2[22;40H(B[0;7m[ Read 45 lines ][23d^G(B[m Get Help     (B[0;7m^O(B[m WriteOut     (B[0;7m^R(B[m Read File    (B[0;7m^Y(B[m Prev Page    (B[0;7m^K(B[m Cut Text     (B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit[24;17H(B[0;7m^J(B[m Justify[33G(B[0;7m^W(B[m Where Is     (B[0;7m^V(B[m Next Page    (B[0;7m^U(B[m UnCut Text   (B[0;7m^T(B[m To Spell[3d[4d[5d[6d[7d[8d[9d[10d[11d[12d[13d[14d[15d[16d[17d[18d[19d[20d[21d7[2;21r8[10S[1;24r[2;1H[K[12d[32m{[13;3H(B[0;1m[33m"max_iob"[39m(B[m: 2[14d[32m}[16d$[39m(B[m (B[0;1m[31m$self[39m(B[m 2 foo.json[17dmax_iob 2 saved [32min[39m(B[m foo.json[18dbewest@hither:~/src/openaps/oref0[32m$[39m[42m [21d[49m(B[mEOF[12d[13d[14d[15d[16d[17d[18d[22d[K[19d[20d[21d7[3;22r8[22d[10S[1;24r[12;1H[32m}[14dcase[39m(B[m (B[0;1m[31m$MAX_IOB[39m(B[m [32min[15d(B[0;1m[33m""(B[0m[32m|[39m(B[m help[32m)[16;3H[39m(B[mhelp_message[17;3H[32m;;[18d[39m(B[m*[32m)[19d(B[0;1m[34mcat[39m(B[m [32m<<[39m(B[mEOF [32m|[39m(B[m json [32m>[39m(B[m (B[0;1m[31m$OUTPUT[20d(B[0m[32m{[39m(B[m (B[0;1m[33m"max_iob"[39m(B[m: (B[0;1m[31m$MAX_IOB[39m(B[m [32m}[21d[39m(B[mEOF[12d[13d[14d[15d[16d[17d[18d[19d[20d[21d7[2;22r8[22d[10S[1;24r[2;1H[K[12d  test (B[0;1m[33m"$OUTPUT"[39m(B[m [32m!=[39m(B[m (B[0;1m[33m'/dev/fd/1'[39m(B[m [32m&&[39m(B[m (B[0;1m[34mecho[39m(B[m (B[0;1m[33m"max_iob $MAX_IOB saved in $OUTPUT"[13;3H(B[0m[32m;;[14desac[12d[39m(B[m[13d[14d[15d[16d[17d[18d[1;87H(B[0;7mModified[17d(B[m[A[A[14;5H[22d(B[0;7mSave modified buffer (ANSWERING "No" WILL DESTROY CHANGES) ?                                    [23;1H Y(B[m Yes[K[24d(B[0;7m N(B[m No  [24;18H(B[0;7mC(B[m Cancel[K[22;62H(B[0;7mFile Name to Write: max_iob.json                            [23d^G(B[m Get Help[23;25H(B[0;7mM-D(B[m DOS Format[23;49H(B[0;7mM-A(B[m Append[23;73H(B[0;7mM-B(B[m Backup File[24d(B[0;7m^C(B[m Cancel[17G        (B[0;7mM-M(B[m Mac Format[24;49H(B[0;7mM-P(B[m Prepend[22;33H[23d[39;49m(B[m[J[1;87H(B[0;7m        [22;39H(B[m[1K (B[0;7m[ Wrote 42 lines ](B[m[K[24;96H[24;1H[?1049l[?1l>]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m nano max_iob.json
[?1049h[1;24r(B[m[4l[?7h[?12l[?25h[?1h=[?1h=[?1h=[39;49m[39;49m(B[m[H[2J(B[0;7m  GNU nano 2.2.6                  File: max_iob.json                                            [3;1H(B[0m[36m#!/bin/bash[6d[39m(B[mself[32m=$([39m(B[mbasename (B[0;1m[31m$0(B[0m[32m)[7d[39m(B[mMAX_IOB[32m=(B[0;1m[31m${1-}[8d[39m(B[mOUTPUT[32m=(B[0;1m[31m${2-[39m(B[m/dev/fd/1[32m}[9dshift[11dfunction[39m(B[m help_message [32m([39m(B[m [32m)[39m(B[m [32m{[12;3H(B[0;1m[34mcat[39m(B[m [32m<<[39m(B[mEOF[13;3HUsage:[14d(B[0;1m[31m$self[39m(B[m max_iob [32m<[39m(B[mmax_iob[32m>[39m(B[m [32m[[39m(B[mmax_iob.json[32m][16d(B[0;1m[31m$self[39m(B[m help - this message[17dPrint a perfect max_iob.json.[20dExamples:[21d[32m$[39m(B[m (B[0;1m[31m$self[39m(B[m 2[22;40H(B[0;7m[ Read 42 lines ][23d^G(B[m Get Help     (B[0;7m^O(B[m WriteOut     (B[0;7m^R(B[m Read File    (B[0;7m^Y(B[m Prev Page    (B[0;7m^K(B[m Cut Text     (B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit[24;17H(B[0;7m^J(B[m Justify[33G(B[0;7m^W(B[m Where Is     (B[0;7m^V(B[m Next Page    (B[0;7m^U(B[m UnCut Text   (B[0;7m^T(B[m To Spell[3d[23d[J[24;96H[24;1H[?1049l[?1l>]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report show
veo://JSON/iter_pump_hours/last_four_pump_hours.json
cgm://JSON/iter_glucose/last_four_cgm_hours.json
tz://JSON/clock/monitor/clock-zoned.json
veo://JSON/read_clock/read_clock.json
veo://JSON/read_settings/settings/settings.json
veo://JSON/read_bg_targets/settings/bg_targets.json
veo://JSON/read_insulin_sensitivies/settings/insulin_sensitivities.json
veo://JSON/read_basal_profile_std/settings/basal_profile.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report show[2Pnano max_iob.jsonopenaps report invoke settings/max_iob.json
usage: openaps-report invoke [-h]
                             {last_four_cgm_hours.json,last_four_pump_hours.json,monitor/clock-zoned.json,read_clock.json,settings/basal_profile.json,settings/bg_targets.json,settings/insulin_sensitivities.json,settings/settings.json}
                             [{last_four_cgm_hours.json,last_four_pump_hours.json,monitor/clock-zoned.json,read_clock.json,settings/basal_profile.json,settings/bg_targets.json,settings/insulin_sensitivities.json,settings/settings.json} ...]
openaps-report invoke: error: argument report: invalid choice: 'settings/max_iob.json' (choose from u'last_four_cgm_hours.json', u'last_four_pump_hours.json', u'monitor/clock-zoned.json', u'read_clock.json', u'settings/basal_profile.json', u'settings/bg_targets.json', u'settings/insulin_sensitivities.json', u'settings/settings.json')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report invoke settings/max_iob.jsonshow[K[2Pnano max_iob.json
[?1049h[1;24r(B[m[4l[?7h[?12l[?25h[?1h=[?1h=[?1h=[39;49m[39;49m(B[m[H[2J(B[0;7m  GNU nano 2.2.6                  File: max_iob.json                                            [3;1H(B[0m[36m#!/bin/bash[6d[39m(B[mself[32m=$([39m(B[mbasename (B[0;1m[31m$0(B[0m[32m)[7d[39m(B[mMAX_IOB[32m=(B[0;1m[31m${1-}[8d[39m(B[mOUTPUT[32m=(B[0;1m[31m${2-[39m(B[m/dev/fd/1[32m}[9dshift[11dfunction[39m(B[m help_message [32m([39m(B[m [32m)[39m(B[m [32m{[12;3H(B[0;1m[34mcat[39m(B[m [32m<<[39m(B[mEOF[13;3HUsage:[14d(B[0;1m[31m$self[39m(B[m max_iob [32m<[39m(B[mmax_iob[32m>[39m(B[m [32m[[39m(B[mmax_iob.json[32m][16d(B[0;1m[31m$self[39m(B[m help - this message[17dPrint a perfect max_iob.json.[20dExamples:[21d[32m$[39m(B[m (B[0;1m[31m$self[39m(B[m 2[22;40H(B[0;7m[ Read 42 lines ][23d^G(B[m Get Help     (B[0;7m^O(B[m WriteOut     (B[0;7m^R(B[m Read File    (B[0;7m^Y(B[m Prev Page    (B[0;7m^K(B[m Cut Text     (B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit[24;17H(B[0;7m^J(B[m Justify[33G(B[0;7m^W(B[m Where Is     (B[0;7m^V(B[m Next Page    (B[0;7m^U(B[m UnCut Text   (B[0;7m^T(B[m To Spell[3d[4d[5d[6d[7d[8d[9d[10d[11d[12d[13d[14d[15d[16d[17d[18d[19d[20d[21d7[2;21r8[10S[1;24r[2;1H[K[12d[32m{[13;3H(B[0;1m[33m"max_iob"[39m(B[m: 2[14d[32m}[16d$[39m(B[m (B[0;1m[31m$self[39m(B[m 2 foo.json[17dmax_iob 2 saved [32min[39m(B[m foo.json[18dbewest@hither:~/src/openaps/oref0[32m$[39m[42m [21d[49m(B[mEOF[12d[13d[14d[15d[16d[17d[22d[K[19d[20d[3;22r[22;1H[10S[1;24r[12;1H[32m}[14dcase[39m(B[m (B[0;1m[31m$MAX_IOB[39m(B[m [32min[15d(B[0;1m[33m""(B[0m[32m|[39m(B[m help[32m)[16;3H[39m(B[mhelp_message[17;3H[32m;;[18d[39m(B[m*[32m)[19d(B[0;1m[34mcat[39m(B[m [32m<<[39m(B[mEOF [32m|[39m(B[m json [32m>[39m(B[m (B[0;1m[31m$OUTPUT[20d(B[0m[32m{[39m(B[m (B[0;1m[33m"max_iob"[39m(B[m: (B[0;1m[31m$MAX_IOB[39m(B[m [32m}[21d[39m(B[mEOF[12d[15d[16d[18d[19d[20d[21d7[2;22r8[22d[10S[1;24r[2;1H[K[12d  test (B[0;1m[33m"$OUTPUT"[39m(B[m [32m!=[39m(B[m (B[0;1m[33m'/dev/fd/1'[39m(B[m [32m&&[39m(B[m (B[0;1m[34mecho[39m(B[m (B[0;1m[33m"max_iob $MAX_IOB saved in $OUTPUT"[13;3H(B[0m[32m;;[14desac[12d[39m(B[m[14d[15d[1;87H(B[0;7mModified[14;5H(B[mesa[K  [K[13;5H [42m  [49m(B[m[K [K[12;76H[12;41H"max_iob (B[0;1m[31m$MAX_IOB[39m(B[m saved [32min[39m(B[m (B[0;1m[31m$OUTPUT[39m(B[m[K     [32m$[39m(B[m[K[42m [49m(B[m[K i[K[42m [49m(B[m[K     [42m [49m(B[m[K       [32m$[39m(B[m[K[42m [49m(B[m[K        [42m [49m(B[m[K ech[K  [42m [49m(B[m[K  [42m [49m(B[m[K [12;21H'/dev/fd/1[K         [42m [49m(B[m[K  [42m [49m(B[m[K [8G"(B[0;1m[31m$OUTPUT[39m(B[m[K     [32m$[39m(B[m[K [42m [49m(B[m[K    [42m  [49m(B[m[K [K[AEOF  [K[10;24H[42m [49m(B[m[K       [32m$[39m(B[m[K[42m [49m(B[m[K  [3G"max_iob[K       [42m [49m(B[m[K [K[9;29H     [32m$[39m(B[m[K[42m [49m(B[m[K [42m [49m(B[m[K    [42m [49m(B[m[K [42m [49m(B[m[K     [42m [49m(B[m[K ca[K [42m  [49m(B[m[K [K[8;3H [K[7;5H [42m  [49m(B[m[K [K[6;15H           [42m  [49m(B[m[K [K[5;10H    [42m [49m(B[m[K  "[K[K[4;17Hi[K[42m [49m(B[m[K       [32m$[39m(B[m[K[42m [49m(B[m[K cas[K  [K[A  (B[0;1m[33m"max_iob"[39m(B[m: 2[4d[32m}[6d$[39m(B[m (B[0;1m[31m$self[39m(B[m 2 foo.json[7dmax_iob 2 saved [32min[39m(B[m foo.json[8dbewest@hither:~/src/openaps/oref0[32m$[39m[42m [11d[49m(B[mEOF[12d[32m}[39m(B[m[K[AEOF  [K[A[A[8;36H                                  [K[7;28H       [42m [49m(B[m[K i[K[42m [49m(B[m[K     [42m [49m(B[m[K [42m [49m(B[m[K       [K[6;19H       [42m [49m(B[m[K [42m [49m(B[m[K    [32m$[39m(B[m[K[42m [49m(B[m[K [K[A[A[A[2;22r[2;1H[10T[1;24r[3;3HUsage:[4d(B[0;1m[31m$self[39m(B[m max_iob [32m<[39m(B[mmax_iob[32m>[39m(B[m [32m[[39m(B[mmax_iob.json[32m][6d(B[0;1m[31m$self[39m(B[m help - this message[7dPrint a perfect max_iob.json.[10dExamples:[11d[32m$[39m(B[m (B[0;1m[31m$self[39m(B[m 2[12d[32m{[39m(B[m[A[C [C[C[C[C[C 2[42m [49m(B[m[K    [32m$[39m(B[m[K[42m [49m(B[m[K [K[11;22r[22;1H
[1;24r[10;10H [K     [K[8;22r[22;1H
[1;24r[9;1H[8;22r[22;1H
[1;24r[8;1H[8;22r[22;1H
[1;24r[7;30H            [42m [49m(B[m[K       [42m [49m(B[m[K [42m [49m(B[m[K     [K[7;22r[22;1H
[1;24r[6;26H      [42m [49m(B[m[K    [42m [49m(B[m[K [42m [49m(B[m[K    [42m [49m(B[m[K    [32m$[39m(B[m[K[K[5;22r[22;1H
[1;24r[5;1H[5;22r[22;1H
[1;24r[4;39H             [42m [49m(B[m[K         [42m [49m(B[m[K       [42m [49m(B[m[K    [32m$[39m(B[m[K[K[4;22r[22;1H
[1;24r[3;9H     [42m  [49m(B[m[K [K[2;22r[2;1H[9T[1;24r[3;1H[36m#!/bin/bash[6d[39m(B[mself[32m=$([39m(B[mbasename (B[0;1m[31m$0(B[0m[32m)[7d[39m(B[mMAX_IOB[32m=(B[0;1m[31m${1-}[8d[39m(B[mOUTPUT[32m=(B[0;1m[31m${2-[39m(B[m/dev/fd/1[32m}[9dshift[11dfunction[39m(B[m help_message [32m([39m(B[m [32m)[39m(B[m [32m{[12;3H(B[0;1m[34mcat[39m(B[m [32m<<[39m(B[mEOF    [42m [49m(B[m[K ca[K [42m  [49m(B[m[K [K[12;22r[22;1H
[1;24r[11;28H[42m [49m(B[m[K [42m [49m(B[m[K [42m [49m(B[m[K            [42m [49m(B[m[K functio[K      [K[10;22r[22;1H
[1;24r[10;1H[10;22r[22;1H
[1;24r[9;6Hshif[K   [K[9;22r[22;1H
[1;24r[8;22H           [32m${[39m(B[m[K    [K[K[K[8;22r[22;1H
[1;24r[7;14H  [32m${[39m(B[m[K         [K[7;22r[22;1H
[1;24r[6;20H [32m$[39m(B[m[K[42m [49m(B[m[K               [K[4;22r[22;1H
[1;24r[5;1H[4;22r[22;1H
[1;24r[4;1H[4;22r[22;1H
[1;24r[3;12H          [K[22d(B[0;7mSave modified buffer (ANSWERING "No" WILL DESTROY CHANGES) ?                                    [23;1H Y(B[m Yes[K[24d(B[0;7m N(B[m No  [24;18H(B[0;7mC(B[m Cancel[K[22;62H(B[0;7mFile Name to Write: max_iob.json                            [23d^G(B[m Get Help[23;25H(B[0;7mM-D(B[m DOS Format[23;49H(B[0;7mM-A(B[m Append[23;73H(B[0;7mM-B(B[m Backup File[24d(B[0;7m^C(B[m Cancel[17G        (B[0;7mM-M(B[m Mac Format[24;49H(B[0;7mM-P(B[m Prepend[22;33H[23d[39;49m(B[m[J[1;87H(B[0;7m        [22;39H(B[m[1K (B[0;7m[ Wrote 6 lines ](B[m[K[24;96H[24;1H[?1049l[?1l>]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m nano max_iob.jsonopenaps report invoke settings/max_iob.json
usage: openaps-report invoke [-h]
                             {last_four_cgm_hours.json,last_four_pump_hours.json,monitor/clock-zoned.json,read_clock.json,settings/basal_profile.json,settings/bg_targets.json,settings/insulin_sensitivities.json,settings/settings.json}
                             [{last_four_cgm_hours.json,last_four_pump_hours.json,monitor/clock-zoned.json,read_clock.json,settings/basal_profile.json,settings/bg_targets.json,settings/insulin_sensitivities.json,settings/settings.json} ...]
openaps-report invoke: error: argument report: invalid choice: 'settings/max_iob.json' (choose from u'last_four_cgm_hours.json', u'last_four_pump_hours.json', u'monitor/clock-zoned.json', u'read_clock.json', u'settings/basal_profile.json', u'settings/bg_targets.json', u'settings/insulin_sensitivities.json', u'settings/settings.json')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m cat max_iob.json | json
{
  "max_iob": 2
}
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m cat max_iob.json | jsonopenaps report invoke settings/max_iob.json[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[26Pnano max_iob.json
[?1049h[1;24r(B[m[4l[?7h[?12l[?25h[?1h=[?1h=[?1h=[39;49m[39;49m(B[m[H[2J(B[0;7m  GNU nano 2.2.6                  File: max_iob.json                                            [4;1H(B[m{[5d "max_iob": 2[6d}[22;41H(B[0;7m[ Read 6 lines ][23d^G(B[m Get Help     (B[0;7m^O(B[m WriteOut     (B[0;7m^R(B[m Read File    (B[0;7m^Y(B[m Prev Page    (B[0;7m^K(B[m Cut Text     (B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit[24;17H(B[0;7m^J(B[m Justify[33G(B[0;7m^W(B[m Where Is     (B[0;7m^V(B[m Next Page    (B[0;7m^U(B[m UnCut Text   (B[0;7m^T(B[m To Spell[3d[4d[5d[6d[7d[1;87H(B[0;7mModified[7d(B[m=[K[A}[K[5;15H          [K  [A{[K[22d[K[4d[A{"max_iob": 2}[22d(B[0;7mSave modified buffer (ANSWERING "No" WILL DESTROY CHANGES) ?                                    [23;1H Y(B[m Yes[K[24d(B[0;7m N(B[m No  [24;18H(B[0;7mC(B[m Cancel[K[22;62H(B[0;7mFile Name to Write: max_iob.json                            [23d^G(B[m Get Help[23;25H(B[0;7mM-D(B[m DOS Format[23;49H(B[0;7mM-A(B[m Append[23;73H(B[0;7mM-B(B[m Backup File[24d(B[0;7m^C(B[m Cancel[17G        (B[0;7mM-M(B[m Mac Format[24;49H(B[0;7mM-P(B[m Prepend[22;33H[23d[39;49m(B[m[J[1;87H(B[0;7m        [22;39H(B[m[1K (B[0;7m[ Wrote 2 lines ](B[m[K[24;96H[24;1H[?1049l[?1l>]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m nano max_iob.jsoncat max_iob.json | json
{
  "max_iob": 2
}
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m ls
calculate-iob.ini    get-profile.ini            max_iob.json   oref0.ini        veo.ini
cgm.ini              last_four_cgm_hours.json   [0m[01;34mmonitor[0m        read_clock.json
determine-basal.ini  last_four_cgm_hous.json    ns-status.ini  [01;34msettings[0m
[01;34menact[0m                last_four_pump_hours.json  openaps.ini    tz.ini
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m pwd
/home/pi/bulgaria
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m pwd[1Plscat max_iob.json | json[6Pnano max_iob.jsoncat max_iob.json | jsonopenaps report invoke settings/max_iob.json
usage: openaps-report invoke [-h]
                             {last_four_cgm_hours.json,last_four_pump_hours.json,monitor/clock-zoned.json,read_clock.json,settings/basal_profile.json,settings/bg_targets.json,settings/insulin_sensitivities.json,settings/settings.json}
                             [{last_four_cgm_hours.json,last_four_pump_hours.json,monitor/clock-zoned.json,read_clock.json,settings/basal_profile.json,settings/bg_targets.json,settings/insulin_sensitivities.json,settings/settings.json} ...]
openaps-report invoke: error: argument report: invalid choice: 'settings/max_iob.json' (choose from u'last_four_cgm_hours.json', u'last_four_pump_hours.json', u'monitor/clock-zoned.json', u'read_clock.json', u'settings/basal_profile.json', u'settings/bg_targets.json', u'settings/insulin_sensitivities.json', u'settings/settings.json')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add max[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kopenaps repow[Krts[K show
veo://JSON/iter_pump_hours/last_four_pump_hours.json
cgm://JSON/iter_glucose/last_four_cgm_hours.json
tz://JSON/clock/monitor/clock-zoned.json
veo://JSON/read_clock/read_clock.json
veo://JSON/read_settings/settings/settings.json
veo://JSON/read_bg_targets/settings/bg_targets.json
veo://JSON/read_insulin_sensitivies/settings/insulin_sensitivities.json
veo://JSON/read_basal_profile_std/settings/basal_profile.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m car[Kt mac[Kx_iob.json
{"max_iob": 2}

]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m ls
calculate-iob.ini    get-profile.ini            max_iob.json   oref0.ini        veo.ini
cgm.ini              last_four_cgm_hours.json   [0m[01;34mmonitor[0m        read_clock.json
determine-basal.ini  last_four_cgm_hous.json    ns-status.ini  [01;34msettings[0m
[01;34menact[0m                last_four_pump_hours.json  openaps.ini    tz.ini
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m oref-[K0-get-profile
usage:  [ 'node', '/usr/local/bin/oref0-get-profile' ] <pump_settings.json> <bg_targets.json> <insulin_sensitivities.json> <basal_profile.json> [<max_iob.json>]
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add settings/profile.json text get-profile shell sett ings/settings.json settings/bg_targets.json settings/insulin_sensitivities.json settings/basal_p rofile.json max_iob.json
added get-profile://text/shell/settings/profile.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps alias add gather-profile "report invoke settings/settings.js on settings/bg_targets.json settings/insulin_sensitivities.json settings/basal_profile.json sett ings/profile.json"
added gather-profile report invoke settings/settings.json settings/bg_targets.json settings/insulin_sensitivities.json settings/basal_profile.json settings/profile.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add monitor/pumphistory.json JSON pump iter_pump_hour s 4[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cp iter_pump_hours [1P4[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cp iter_pump_hours 4[K[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C iter_pump_hours 4 [K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cv iter_pump_hours 4 [A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ce iter_pump_hours 44[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Co iter_pump_hours 4[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

added veo://JSON/iter_pump_hours/monitor/pumphistory.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report invoke monitor/pu[Kumphids[K[Kstory.json
veo://JSON/iter_pump_hours/monitor/pumphistory.json
reporting monitor/pumphistory.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add monitor/clock.json JSON pump read_clock
^[[Ausage: openaps-report add [-h] report {base,text,stdout,JSON} device ...
openaps-report add: error: argument device: invalid choice: 'pump' (choose from u'calculate-iob', u'cgm', u'determine-basal', u'get-profile', u'ns-status', u'oref0', u'tz', u'veo')
^[[D]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add monitor/clock.json JSON pump read_clock[1P[1P[C[1P read_clock[1P read_clockv read_clocke read_clocko read_clock
added veo://JSON/read_clock/monitor/clock.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add monitor/clock.json JSON veo read_clock[1@pump[C[C[C[C[C[C[C[C[C[C[C[12Pinvoke monitor/pumphistory.jsonadd monitor/pumphistory.json JSON veo iter_pump_hours  4[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[22Pinvoke monitor/pumphistory.json
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kclock.json
veo://JSON/read_clock/monitor/clock.json
reporting monitor/clock.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add monitor/iob.json JSON calculate-iob shell monitor /pumphistory.json settings/profile.json monitor/clock.json
added calculate-iob://JSON/shell/monitor/iob.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m cat iob.json
cat: iob.json: No such file or directory
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m cat monitor.[K/iob.json
cat: monitor/iob.json: No such file or directory
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m ls
calculate-iob.ini    get-profile.ini            max_iob.json   oref0.ini        veo.ini
cgm.ini              last_four_cgm_hours.json   [0m[01;34mmonitor[0m        read_clock.json
determine-basal.ini  last_four_cgm_hous.json    ns-status.ini  [01;34msettings[0m
[01;34menact[0m                last_four_pump_hours.json  openaps.ini    tz.ini
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add monitor/temp_basal.json JSON pump read_temp_basal [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P read_temp_basal
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P read_temp_basal[1P read_temp_basal[1P read_temp_basalv read_temp_basale read_temp_basalo read_temp_basal
added veo://JSON/read_temp_basal/monitor/temp_basal.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add monitor/temp_basal.json JSON veo read_temp_basal[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kcat monitor/iob.json[8Piob.jsonopenaps report add monitor/iob.json JSON calculate-iob shell monitor//pumphistory.json settings/profile.json monitor/clock.json[A[28Pinvoke monitor/clock.json
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P.json[1P.json[1P.json[1P.json[1P.jsont.jsone.jsonm.jsonp.json_.jsonb.jsona.jsons.jsona.jsonl.json
veo://JSON/read_temp_basal/monitor/temp_basal.json
reporting monitor/temp_basal.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add monitor/glucose.json JSON cgm iter_glucose 5
added cgm://JSON/iter_glucose/monitor/glucose.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add monitor/glucose.json JSON cgm iter_glucose 5[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[18Pinvoke monitor/temp_basal.json[C[1P.json[1P.json[1P.json[1P.json[1P.json[1P.json[1P.json[1P.json[1P.json[1P.jsong.jsonl.jsonu.jsonc.jsono.jsons.jsone.json
cgm://JSON/iter_glucose/monitor/glucose.json
reporting monitor/glucose.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add enact/suggested.json text determine-basal shell m onitor/iob.json monitor/temp_basal.json monitor/glucose.json settings/profile.json
added determine-basal://text/shell/enact/suggested.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps alias add monitor-pump "report invoke monitor/clock.json mon itor/temp_basal.json monitor/pumphistory.json monitor/iob.json"
added monitor-pump report invoke monitor/clock.json monitor/temp_basal.json monitor/pumphistory.json monitor/iob.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps alias add monitor-cgm "report invoke monitor/glucose.json"
added monitor-cgm report invoke monitor/glucose.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report show
veo://JSON/iter_pump_hours/last_four_pump_hours.json
cgm://JSON/iter_glucose/last_four_cgm_hours.json
tz://JSON/clock/monitor/clock-zoned.json
veo://JSON/read_clock/read_clock.json
veo://JSON/read_settings/settings/settings.json
veo://JSON/read_bg_targets/settings/bg_targets.json
veo://JSON/read_insulin_sensitivies/settings/insulin_sensitivities.json
veo://JSON/read_basal_profile_std/settings/basal_profile.json
get-profile://text/shell/settings/profile.json
veo://JSON/iter_pump_hours/monitor/pumphistory.json
veo://JSON/read_clock/monitor/clock.json
calculate-iob://JSON/shell/monitor/iob.json
veo://JSON/read_temp_basal/monitor/temp_basal.json
cgm://JSON/iter_glucose/monitor/glucose.json
determine-basal://text/shell/enact/suggested.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps alias show
last_four_hours report invoke last_four_pump_hours.json last_four_cgm_hours.json
status-upload ! bash -c "openaps report invoke monitor/upload-status.json && ns-upload $NIGHTSCOUT_HOST $API_SECRET devicestatus.json monitor/upload-status.json"
gather-profile report invoke settings/settings.json settings/bg_targets.json settings/insulin_sensitivities.json settings/basal_profile.json settings/profile.json
monitor-pump report invoke monitor/clock.json monitor/temp_basal.json monitor/pumphistory.json monitor/iob.json
monitor-cgm report invoke monitor/glucose.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m rm -f settings/* monitos[Kr* enact/*
rm: cannot remove 'monitor': Is a directory
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openapsr[K[Ks gather-[K[Kr-profile
veo://JSON/read_settings/settings/settings.json
^[[A    reporting settings/settings.json
veo://JSON/read_bg_targets/settings/bg_targets.json
reporting settings/bg_targets.json
veo://JSON/read_insulin_sensitivies/settings/insulin_sensitivities.json
reporting settings/insulin_sensitivities.json
veo://JSON/read_basal_profile_std/settings/basal_profile.json
reporting settings/basal_profile.json
get-profile://text/shell/settings/profile.json
reporting settings/profile.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps gather-profile[K[K[K[K[K[K[K[K[K[K[K[K[K[Kmonitor-pump
veo://JSON/read_clock/monitor/clock.json
reporting monitor/clock.json
veo://JSON/read_temp_basal/monitor/temp_basal.json
reporting monitor/temp_basal.json
veo://JSON/iter_pump_hours/monitor/pumphistory.json
reporting monitor/pumphistory.json
calculate-iob://JSON/shell/monitor/iob.json

module.js:485
    throw err;
          ^
SyntaxError: /home/pi/bulgaria/settings/profile.json: Unexpected token B
    at Object.parse (native)
    at Object.Module._extensions..json (module.js:482:27)
    at Module.load (module.js:356:32)
    at Function.Module._load (module.js:312:12)
    at Module.require (module.js:364:17)
    at require (module.js:380:17)
    at Object.<anonymous> (/usr/local/lib/node_modules/oref0/bin/oref0-calculate-iob.js:35:22)
    at Module._compile (module.js:456:26)
    at Object.Module._extensions..js (module.js:474:10)
    at Module.load (module.js:356:32)
No JSON object could be decoded

Traceback (most recent call last):
  File "/usr/local/bin/openaps-report", line 4, in <module>
    __import__('pkg_resources').run_script('openaps==0.0.10', 'openaps-report')
  File "/usr/local/lib/python2.7/dist-packages/setuptools-20.9.0-py2.7.egg/pkg_resources/__init__.py", line 719, in run_script
    self.require(requires)[0].run_script(script_name, ns)
  File "/usr/local/lib/python2.7/dist-packages/setuptools-20.9.0-py2.7.egg/pkg_resources/__init__.py", line 1504, in run_script
    exec(code, namespace, namespace)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/EGG-INFO/scripts/openaps-report", line 82, in <module>
    app( )
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/cli/__init__.py", line 44, in __call__
    self.run(self.args)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/EGG-INFO/scripts/openaps-report", line 75, in run
    output = app(args, self)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/cli/subcommand.py", line 52, in __call__
    return self.method.main(args, app)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/reports/invoke.py", line 48, in main
    reporters.Reporter(report, device, task)(output)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/reports/reporters/__init__.py", line 27, in __call__
    self.blob = self.serialize(data)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/reports/reporters/__init__.py", line 25, in serialize
    return self.method.serialize(render(data), self)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/vendors/process.py", line 56, in prerender_json
    return json.loads(data)
  File "/usr/lib/python2.7/json/__init__.py", line 338, in loads
    return _default_decoder.decode(s)
  File "/usr/lib/python2.7/json/decoder.py", line 366, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib/python2.7/json/decoder.py", line 384, in raw_decode
    raise ValueError("No JSON object could be decoded")
ValueError: No JSON object could be decoded
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps monitor-pump[K[K[K[Kcgm
cgm://JSON/iter_glucose/monitor/glucose.json
reporting monitor/glucose.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps monitor-cgmrmonitor-cgmemonitor-cgmpmonitor-cgmomonitor-cgmrmonitor-cgmtmonitor-cgm monitor-cgmimonitor-cgmnmonitor-cgmvmonitor-cgmomonitor-cgmkmonitor-cgmemonitor-cgm monitor-cgm[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K/iob.json
calculate-iob://JSON/shell/monitor/iob.json

module.js:485
    throw err;
          ^
SyntaxError: /home/pi/bulgaria/settings/profile.json: Unexpected token B
    at Object.parse (native)
    at Object.Module._extensions..json (module.js:482:27)
    at Module.load (module.js:356:32)
    at Function.Module._load (module.js:312:12)
    at Module.require (module.js:364:17)
    at require (module.js:380:17)
    at Object.<anonymous> (/usr/local/lib/node_modules/oref0/bin/oref0-calculate-iob.js:35:22)
    at Module._compile (module.js:456:26)
    at Object.Module._extensions..js (module.js:474:10)
    at Module.load (module.js:356:32)
No JSON object could be decoded

Traceback (most recent call last):
  File "/usr/local/bin/openaps-report", line 4, in <module>
    __import__('pkg_resources').run_script('openaps==0.0.10', 'openaps-report')
  File "/usr/local/lib/python2.7/dist-packages/setuptools-20.9.0-py2.7.egg/pkg_resources/__init__.py", line 719, in run_script
    self.require(requires)[0].run_script(script_name, ns)
  File "/usr/local/lib/python2.7/dist-packages/setuptools-20.9.0-py2.7.egg/pkg_resources/__init__.py", line 1504, in run_script
    exec(code, namespace, namespace)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/EGG-INFO/scripts/openaps-report", line 82, in <module>
    app( )
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/cli/__init__.py", line 44, in __call__
    self.run(self.args)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/EGG-INFO/scripts/openaps-report", line 75, in run
    output = app(args, self)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/cli/subcommand.py", line 52, in __call__
    return self.method.main(args, app)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/reports/invoke.py", line 48, in main
    reporters.Reporter(report, device, task)(output)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/reports/reporters/__init__.py", line 27, in __call__
    self.blob = self.serialize(data)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/reports/reporters/__init__.py", line 25, in serialize
    return self.method.serialize(render(data), self)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/vendors/process.py", line 56, in prerender_json
    return json.loads(data)
  File "/usr/lib/python2.7/json/__init__.py", line 338, in loads
    return _default_decoder.decode(s)
  File "/usr/lib/python2.7/json/decoder.py", line 366, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib/python2.7/json/decoder.py", line 384, in raw_decode
    raise ValueError("No JSON object could be decoded")
ValueError: No JSON object could be decoded
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report invoke enact/suggested.json
determine-basal://text/shell/enact/suggested.json

module.js:485
    throw err;
          ^
SyntaxError: /home/pi/bulgaria/monitor/iob.json: Unexpected end of input
    at Object.parse (native)
    at Object.Module._extensions..json (module.js:482:27)
    at Module.load (module.js:356:32)
    at Function.Module._load (module.js:312:12)
    at Module.require (module.js:364:17)
    at require (module.js:380:17)
    at Object.<anonymous> (/usr/local/lib/node_modules/oref0/bin/oref0-determine-basal.js:35:20)
    at Module._compile (module.js:456:26)
    at Object.Module._extensions..js (module.js:474:10)
    at Module.load (module.js:356:32)
reporting enact/suggested.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m nano iob.json
[?1049h[1;24r(B[m[4l[?7h[?12l[?25h[?1h=[?1h=[?1h=[39;49m[39;49m(B[m[H[2J(B[0;7m  GNU nano 2.2.6                    File: iob.json                                              [22;43H[ New File ][23d^G(B[m Get Help     (B[0;7m^O(B[m WriteOut     (B[0;7m^R(B[m Read File    (B[0;7m^Y(B[m Prev Page    (B[0;7m^K(B[m Cut Text     (B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit[24;17H(B[0;7m^J(B[m Justify[33G(B[0;7m^W(B[m Where Is     (B[0;7m^V(B[m Next Page    (B[0;7m^U(B[m UnCut Text   (B[0;7m^T(B[m To Spell[3d[23d[J[24;96H[24;1H[?1049l[?1l>]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m ls
calculate-iob.ini    get-profile.ini            max_iob.json   oref0.ini        veo.ini
cgm.ini              last_four_cgm_hours.json   [0m[01;34mmonitor[0m        read_clock.json
determine-basal.ini  last_four_cgm_hous.json    ns-status.ini  [01;34msettings[0m
[01;34menact[0m                last_four_pump_hours.json  openaps.ini    tz.ini
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m lsnano iob.jsonopenaps report invoke enact/suggested.json
determine-basal://text/shell/enact/suggested.json

module.js:485
    throw err;
          ^
SyntaxError: /home/pi/bulgaria/monitor/iob.json: Unexpected end of input
    at Object.parse (native)
    at Object.Module._extensions..json (module.js:482:27)
    at Module.load (module.js:356:32)
    at Function.Module._load (module.js:312:12)
    at Module.require (module.js:364:17)
    at require (module.js:380:17)
    at Object.<anonymous> (/usr/local/lib/node_modules/oref0/bin/oref0-determine-basal.js:35:20)
    at Module._compile (module.js:456:26)
    at Object.Module._extensions..js (module.js:474:10)
    at Module.load (module.js:356:32)
reporting enact/suggested.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps e[Kreport invoke show
usage: openaps-report invoke [-h]
                             {enact/suggested.json,last_four_cgm_hours.json,last_four_pump_hours.json,monitor/clock-zoned.json,monitor/clock.json,monitor/glucose.json,monitor/iob.json,monitor/pumphistory.json,monitor/temp_basal.json,read_clock.json,settings/basal_profile.json,settings/bg_targets.json,settings/insulin_sensitivities.json,settings/profile.json,settings/settings.json}
                             [{enact/suggested.json,last_four_cgm_hours.json,last_four_pump_hours.json,monitor/clock-zoned.json,monitor/clock.json,monitor/glucose.json,monitor/iob.json,monitor/pumphistory.json,monitor/temp_basal.json,read_clock.json,settings/basal_profile.json,settings/bg_targets.json,settings/insulin_sensitivities.json,settings/profile.json,settings/settings.json} ...]
openaps-report invoke: error: argument report: invalid choice: 'show' (choose from u'enact/suggested.json', u'last_four_cgm_hours.json', u'last_four_pump_hours.json', u'monitor/clock-zoned.json', u'monitor/clock.json', u'monitor/glucose.json', u'monitor/iob.json', u'monitor/pumphistory.json', u'monitor/temp_basal.json', u'read_clock.json', u'settings/basal_profile.json', u'settings/bg_targets.json', u'settings/insulin_sensitivities.json', u'settings/profile.json', u'settings/settings.json')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report invoke showenact/suggested.json[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K-h
usage: openaps-report invoke [-h]
                             {enact/suggested.json,last_four_cgm_hours.json,last_four_pump_hours.json,monitor/clock-zoned.json,monitor/clock.json,monitor/glucose.json,monitor/iob.json,monitor/pumphistory.json,monitor/temp_basal.json,read_clock.json,settings/basal_profile.json,settings/bg_targets.json,settings/insulin_sensitivities.json,settings/profile.json,settings/settings.json}
                             [{enact/suggested.json,last_four_cgm_hours.json,last_four_pump_hours.json,monitor/clock-zoned.json,monitor/clock.json,monitor/glucose.json,monitor/iob.json,monitor/pumphistory.json,monitor/temp_basal.json,read_clock.json,settings/basal_profile.json,settings/bg_targets.json,settings/insulin_sensitivities.json,settings/profile.json,settings/settings.json} ...]

invoke   - generate a report

positional arguments:
  {enact/suggested.json,last_four_cgm_hours.json,last_four_pump_hours.json,monitor/clock-zoned.json,monitor/clock.json,monitor/glucose.json,monitor/iob.json,monitor/pumphistory.json,monitor/temp_basal.json,read_clock.json,settings/basal_profile.json,settings/bg_targets.json,settings/insulin_sensitivities.json,settings/profile.json,settings/settings.json}

optional arguments:
  -h, --help            show this help message and exit
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps u[Kstatus-upload
usage: openaps-report invoke [-h]
                             {enact/suggested.json,last_four_cgm_hours.json,last_four_pump_hours.json,monitor/clock-zoned.json,monitor/clock.json,monitor/glucose.json,monitor/iob.json,monitor/pumphistory.json,monitor/temp_basal.json,read_clock.json,settings/basal_profile.json,settings/bg_targets.json,settings/insulin_sensitivities.json,settings/profile.json,settings/settings.json}
                             [{enact/suggested.json,last_four_cgm_hours.json,last_four_pump_hours.json,monitor/clock-zoned.json,monitor/clock.json,monitor/glucose.json,monitor/iob.json,monitor/pumphistory.json,monitor/temp_basal.json,read_clock.json,settings/basal_profile.json,settings/bg_targets.json,settings/insulin_sensitivities.json,settings/profile.json,settings/settings.json} ...]
openaps-report invoke: error: argument report: invalid choice: 'monitor/upload-status.json' (choose from u'enact/suggested.json', u'last_four_cgm_hours.json', u'last_four_pump_hours.json', u'monitor/clock-zoned.json', u'monitor/clock.json', u'monitor/glucose.json', u'monitor/iob.json', u'monitor/pumphistory.json', u'monitor/temp_basal.json', u'read_clock.json', u'settings/basal_profile.json', u'settings/bg_targets.json', u'settings/insulin_sensitivities.json', u'settings/profile.json', u'settings/settings.json')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m cat openaps init
cat: openaps: No such file or directory
cat: init: No such file or directory
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m cat openaps init[1Pinit.init
cat: openaps.init: No such file or directory
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps device show
medtronic://veo
dexcom://cgm
process://ns-status/ns-status/
timezones://tz
process://oref0/oref0/
process://get-profile/oref0/get-profile
process://calculate-iob/oref0/calculate-iob
process://determine-basal/oref0/determine-basal
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m cat openaps.ini
[device "veo"]
vendor = openaps.vendors.medtronic
extra = veo.ini

[device "cgm"]
vendor = openaps.vendors.dexcom
extra = cgm.ini

[report "last_four_pump_hours.json"]
device = veo
hours = 4.0
use = iter_pump_hours
reporter = JSON

[report "last_four_cgm_hours.json"]
device = cgm
count = 200
use = iter_glucose
reporter = JSON

[alias]
last_four_hours = report invoke last_four_pump_hours.json last_four_cgm_hours.json
status-upload = ! bash -c "openaps report invoke monitor/upload-status.json && ns-upload $NIGHTSCOUT_HOST $API_SECRET devicestatus.json monitor/upload-status.json"
gather-profile = report invoke settings/settings.json settings/bg_targets.json settings/insulin_sensitivities.json settings/basal_profile.json settings/profile.json
monitor-pump = report invoke monitor/clock.json monitor/temp_basal.json monitor/pumphistory.json monitor/iob.json
monitor-cgm = report invoke monitor/glucose.json

[device "ns-status"]
vendor = openaps.vendors.process
extra = ns-status.ini

[vendor "openapscontrib.timezones"]
path = .
module = openapscontrib.timezones

[device "tz"]
vendor = openapscontrib.timezones
extra = tz.ini

[report "monitor/clock-zoned.json"]
use = clock
reporter = JSON
astimezone = False
date = None
adjust = missing
input = monitor/clock.json
device = tz
timezone = EEST

[report "read_clock.json"]
device = veo
use = read_clock
reporter = JSON

[device "oref0"]
vendor = openaps.vendors.process
extra = oref0.ini

[device "get-profile"]
vendor = openaps.vendors.process
extra = get-profile.ini

[device "calculate-iob"]
vendor = openaps.vendors.process
extra = calculate-iob.ini

[device "determine-basal"]
vendor = openaps.vendors.process
extra = determine-basal.ini

[report "settings/settings.json"]
device = veo
use = read_settings
reporter = JSON

[report "settings/bg_targets.json"]
device = veo
use = read_bg_targets
reporter = JSON

[report "settings/insulin_sensitivities.json"]
device = veo
use = read_insulin_sensitivies
reporter = JSON

[report "settings/basal_profile.json"]
device = veo
use = read_basal_profile_std
reporter = JSON

[report "settings/profile.json"]
use = shell
bg_targets = settings/bg_targets.json
settings = settings/settings.json
basal_profile = settings/basal_profile.json
reporter = text
json_default = True
max_iob = max_iob.json
device = get-profile
remainder = []
insulin_sensitivities = settings/insulin_sensitivities.json

[report "monitor/pumphistory.json"]
device = veo
hours = 4.0
use = iter_pump_hours
reporter = JSON

[report "monitor/clock.json"]
device = veo
use = read_clock
reporter = JSON

[report "monitor/iob.json"]
profile = settings/profile.json
use = shell
reporter = JSON
clock = monitor/clock.json
json_default = True
pumphistory = monitor/pumphistory.json
device = calculate-iob
remainder = []

[report "monitor/temp_basal.json"]
device = veo
use = read_temp_basal
reporter = JSON

[report "monitor/glucose.json"]
device = cgm
count = 5
use = iter_glucose
reporter = JSON

[report "enact/suggested.json"]
profile = settings/profile.json
use = shell
temp_basal = monitor/temp_basal.json
reporter = text
json_default = True
device = determine-basal
remainder = []
iob = monitor/iob.json
glucose = monitor/glucose.json

]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m status-upload
bash: status-upload: command not found
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report invoke last_four_pump_hpurs[K[K[K[Kours.json
veo://JSON/iter_pump_hours/last_four_pump_hours.json
reporting last_four_pump_hours.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report invoke last_four_pump_hours.json[1P_hours.json[1P_hours.json[1P_hours.json[1P_hours.jsonc_hours.jsong_hours.jsonm_hours.json
cgm://JSON/iter_glucose/last_four_cgm_hours.json
reporting last_four_cgm_hours.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps last_four_hours
veo://JSON/iter_pump_hours/last_four_pump_hours.json
reporting last_four_pump_hours.json
cgm://JSON/iter_glucose/last_four_cgm_hours.json
reporting last_four_cgm_hours.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m cat openapsr[Ks i[K[K[K[K [Ks init.[K[K[K[K[K[K.ini
[device "veo"]
vendor = openaps.vendors.medtronic
extra = veo.ini

[device "cgm"]
vendor = openaps.vendors.dexcom
extra = cgm.ini

[report "last_four_pump_hours.json"]
device = veo
hours = 4.0
use = iter_pump_hours
reporter = JSON

[report "last_four_cgm_hours.json"]
device = cgm
count = 200
use = iter_glucose
reporter = JSON

[alias]
last_four_hours = report invoke last_four_pump_hours.json last_four_cgm_hours.json
status-upload = ! bash -c "openaps report invoke monitor/upload-status.json && ns-upload $NIGHTSCOUT_HOST $API_SECRET devicestatus.json monitor/upload-status.json"
gather-profile = report invoke settings/settings.json settings/bg_targets.json settings/insulin_sensitivities.json settings/basal_profile.json settings/profile.json
monitor-pump = report invoke monitor/clock.json monitor/temp_basal.json monitor/pumphistory.json monitor/iob.json
monitor-cgm = report invoke monitor/glucose.json

[device "ns-status"]
vendor = openaps.vendors.process
extra = ns-status.ini

[vendor "openapscontrib.timezones"]
path = .
module = openapscontrib.timezones

[device "tz"]
vendor = openapscontrib.timezones
extra = tz.ini

[report "monitor/clock-zoned.json"]
use = clock
reporter = JSON
astimezone = False
date = None
adjust = missing
input = monitor/clock.json
device = tz
timezone = EEST

[report "read_clock.json"]
device = veo
use = read_clock
reporter = JSON

[device "oref0"]
vendor = openaps.vendors.process
extra = oref0.ini

[device "get-profile"]
vendor = openaps.vendors.process
extra = get-profile.ini

[device "calculate-iob"]
vendor = openaps.vendors.process
extra = calculate-iob.ini

[device "determine-basal"]
vendor = openaps.vendors.process
extra = determine-basal.ini

[report "settings/settings.json"]
device = veo
use = read_settings
reporter = JSON

[report "settings/bg_targets.json"]
device = veo
use = read_bg_targets
reporter = JSON

[report "settings/insulin_sensitivities.json"]
device = veo
use = read_insulin_sensitivies
reporter = JSON

[report "settings/basal_profile.json"]
device = veo
use = read_basal_profile_std
reporter = JSON

[report "settings/profile.json"]
use = shell
bg_targets = settings/bg_targets.json
settings = settings/settings.json
basal_profile = settings/basal_profile.json
reporter = text
json_default = True
max_iob = max_iob.json
device = get-profile
remainder = []
insulin_sensitivities = settings/insulin_sensitivities.json

[report "monitor/pumphistory.json"]
device = veo
hours = 4.0
use = iter_pump_hours
reporter = JSON

[report "monitor/clock.json"]
device = veo
use = read_clock
reporter = JSON

[report "monitor/iob.json"]
profile = settings/profile.json
use = shell
reporter = JSON
clock = monitor/clock.json
json_default = True
pumphistory = monitor/pumphistory.json
device = calculate-iob
remainder = []

[report "monitor/temp_basal.json"]
device = veo
use = read_temp_basal
reporter = JSON

[report "monitor/glucose.json"]
device = cgm
count = 5
use = iter_glucose
reporter = JSON

[report "enact/suggested.json"]
profile = settings/profile.json
use = shell
temp_basal = monitor/temp_basal.json
reporter = text
json_default = True
device = determine-basal
remainder = []
iob = monitor/iob.json
glucose = monitor/glucose.json

]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps alies show
openaps: 'alies' is not an openaps command. See 'openaps --help'.
        
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps alies show[C[1P[1@a
last_four_hours report invoke last_four_pump_hours.json last_four_cgm_hours.json
status-upload ! bash -c "openaps report invoke monitor/upload-status.json && ns-upload $NIGHTSCOUT_HOST $API_SECRET devicestatus.json monitor/upload-status.json"
gather-profile report invoke settings/settings.json settings/bg_targets.json settings/insulin_sensitivities.json settings/basal_profile.json settings/profile.json
monitor-pump report invoke monitor/clock.json monitor/temp_basal.json monitor/pumphistory.json monitor/iob.json
monitor-cgm report invoke monitor/glucose.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m status u[K[K-i[Kupload
bash: status-upload: command not found
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps status-upload
usage: openaps-report invoke [-h]
                             {enact/suggested.json,last_four_cgm_hours.json,last_four_pump_hours.json,monitor/clock-zoned.json,monitor/clock.json,monitor/glucose.json,monitor/iob.json,monitor/pumphistory.json,monitor/temp_basal.json,read_clock.json,settings/basal_profile.json,settings/bg_targets.json,settings/insulin_sensitivities.json,settings/profile.json,settings/settings.json}
                             [{enact/suggested.json,last_four_cgm_hours.json,last_four_pump_hours.json,monitor/clock-zoned.json,monitor/clock.json,monitor/glucose.json,monitor/iob.json,monitor/pumphistory.json,monitor/temp_basal.json,read_clock.json,settings/basal_profile.json,settings/bg_targets.json,settings/insulin_sensitivities.json,settings/profile.json,settings/settings.json} ...]
openaps-report invoke: error: argument report: invalid choice: 'monitor/upload-status.json' (choose from u'enact/suggested.json', u'last_four_cgm_hours.json', u'last_four_pump_hours.json', u'monitor/clock-zoned.json', u'monitor/clock.json', u'monitor/glucose.json', u'monitor/iob.json', u'monitor/pumphistory.json', u'monitor/temp_basal.json', u'read_clock.json', u'settings/basal_profile.json', u'settings/bg_targets.json', u'settings/insulin_sensitivities.json', u'settings/profile.json', u'settings/settings.json')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps use pump model
usage: openaps-use [-h] [--format {text,json,base,stdout}] [--output OUTPUT]
                   [--version]
                   device ...
openaps-use: error: argument device: invalid choice: 'pump' (choose from u'calculate-iob', u'cgm', u'determine-basal', u'get-profile', u'ns-status', u'oref0', u'tz', u'veo')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps use pump model[C[C[C[1P model[1P model[1P model[1P modelv modele modelo model
"754"]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps use veo model[K[K[K[K[K[K reservoir
76.8]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps use veo reservoir[K[K[K[K[K[K[Kad_clock
"2016-04-23T00:36:55"]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m 
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add monitor/upload-status.json JSON ns-status shell m onitor/clock-zoned.json monitor/iob.json enact/suggested.json enact/enacted.json monitor/battery .json monitor/reservoir.json monitor/status.json 
added ns-status://JSON/shell/monitor/upload-status.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add monitor/upload-status.json JSON ns-status shell moonitor/clock-zoned.json monitor/iob.json enact/suggested.json enact/enacted.json monitor/battery..json monitor/reservoir.json monitor/status.json [A[Ause veo read_clock[K
[K
[K[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1Pservoir[4Pmodel[1@pump[C[C[C[C[C[C[1Pstatus-upload[8Pstatus-uploadopenaps status-upload
ns-status://JSON/shell/monitor/upload-status.json

module.js:485
    throw err;
          ^
SyntaxError: /home/pi/bulgaria/monitor/iob.json: Unexpected end of input
    at Object.parse (native)
    at Object.Module._extensions..json (module.js:482:27)
    at Module.load (module.js:356:32)
    at Function.Module._load (module.js:312:12)
    at Module.require (module.js:364:17)
    at require (module.js:380:17)
    at requireWithTimestamp (/usr/local/lib/node_modules/oref0/bin/ns-status.js:22:18)
    at Object.<anonymous> (/usr/local/lib/node_modules/oref0/bin/ns-status.js:50:14)
    at Module._compile (module.js:456:26)
    at Object.Module._extensions..js (module.js:474:10)
No JSON object could be decoded

Traceback (most recent call last):
  File "/usr/local/bin/openaps-report", line 4, in <module>
    __import__('pkg_resources').run_script('openaps==0.0.10', 'openaps-report')
  File "/usr/local/lib/python2.7/dist-packages/setuptools-20.9.0-py2.7.egg/pkg_resources/__init__.py", line 719, in run_script
    self.require(requires)[0].run_script(script_name, ns)
  File "/usr/local/lib/python2.7/dist-packages/setuptools-20.9.0-py2.7.egg/pkg_resources/__init__.py", line 1504, in run_script
    exec(code, namespace, namespace)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/EGG-INFO/scripts/openaps-report", line 82, in <module>
    app( )
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/cli/__init__.py", line 44, in __call__
    self.run(self.args)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/EGG-INFO/scripts/openaps-report", line 75, in run
    output = app(args, self)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/cli/subcommand.py", line 52, in __call__
    return self.method.main(args, app)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/reports/invoke.py", line 48, in main
    reporters.Reporter(report, device, task)(output)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/reports/reporters/__init__.py", line 27, in __call__
    self.blob = self.serialize(data)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/reports/reporters/__init__.py", line 25, in serialize
    return self.method.serialize(render(data), self)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/vendors/process.py", line 56, in prerender_json
    return json.loads(data)
  File "/usr/lib/python2.7/json/__init__.py", line 338, in loads
    return _default_decoder.decode(s)
  File "/usr/lib/python2.7/json/decoder.py", line 366, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib/python2.7/json/decoder.py", line 384, in raw_decode
    raise ValueError("No JSON object could be decoded")
ValueError: No JSON object could be decoded
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps read_status
openaps: 'read_status' is not an openaps command. See 'openaps --help'.
        
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps read_statusvread_statuseread_statusoread_status read_status
openaps: 'veo' is not an openaps command. See 'openaps --help'.
        
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps veo read_status[4Pread_statusstatus-upload[2Pread_statusveo read_status[C[1@ [1@u[1@s[1@e
{
  "status": "normal", 
  "bolusing": false, 
  "suspended": false
}]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m ns-upload $NIGHTSCOUT_HOST $API_SECRET devicestatus.json monitor/upl oad-status.json
[{"created_at":"2016-04-22T21:42:44.544Z","_id":"571a9ad453083ce825ba6ba8"}]]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m 
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps alias add status-upload '! bash -c "openaps report invoke mo nitor/upload-status.json && ns-upload $NIGHTSCOUT_HOST $API_SECRET devicestatus.json monitor/upl oad-status.json"'
added status-upload ! bash -c "openaps report invoke monitor/upload-status.json && ns-upload $NIGHTSCOUT_HOST $API_SECRET devicestatus.json monitor/upload-status.json"
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps status-upload
ns-status://JSON/shell/monitor/upload-status.json

module.js:485
    throw err;
          ^
SyntaxError: /home/pi/bulgaria/monitor/iob.json: Unexpected end of input
    at Object.parse (native)
    at Object.Module._extensions..json (module.js:482:27)
    at Module.load (module.js:356:32)
    at Function.Module._load (module.js:312:12)
    at Module.require (module.js:364:17)
    at require (module.js:380:17)
    at requireWithTimestamp (/usr/local/lib/node_modules/oref0/bin/ns-status.js:22:18)
    at Object.<anonymous> (/usr/local/lib/node_modules/oref0/bin/ns-status.js:50:14)
    at Module._compile (module.js:456:26)
    at Object.Module._extensions..js (module.js:474:10)
No JSON object could be decoded

Traceback (most recent call last):
  File "/usr/local/bin/openaps-report", line 4, in <module>
    __import__('pkg_resources').run_script('openaps==0.0.10', 'openaps-report')
  File "/usr/local/lib/python2.7/dist-packages/setuptools-20.9.0-py2.7.egg/pkg_resources/__init__.py", line 719, in run_script
    self.require(requires)[0].run_script(script_name, ns)
  File "/usr/local/lib/python2.7/dist-packages/setuptools-20.9.0-py2.7.egg/pkg_resources/__init__.py", line 1504, in run_script
    exec(code, namespace, namespace)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/EGG-INFO/scripts/openaps-report", line 82, in <module>
    app( )
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/cli/__init__.py", line 44, in __call__
    self.run(self.args)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/EGG-INFO/scripts/openaps-report", line 75, in run
    output = app(args, self)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/cli/subcommand.py", line 52, in __call__
    return self.method.main(args, app)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/reports/invoke.py", line 48, in main
    reporters.Reporter(report, device, task)(output)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/reports/reporters/__init__.py", line 27, in __call__
    self.blob = self.serialize(data)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/reports/reporters/__init__.py", line 25, in serialize
    return self.method.serialize(render(data), self)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/vendors/process.py", line 56, in prerender_json
    return json.loads(data)
  File "/usr/lib/python2.7/json/__init__.py", line 338, in loads
    return _default_decoder.decode(s)
  File "/usr/lib/python2.7/json/decoder.py", line 366, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib/python2.7/json/decoder.py", line 384, in raw_decode
    raise ValueError("No JSON object could be decoded")
ValueError: No JSON object could be decoded
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps alias add latest-ns-treatment-time '! bash -c "nightscout la test-openaps-treatment $NIGHTSCOUT_HOST | json created_at"' || die "Can't add latest-ns-treatmen t-time"
added latest-ns-treatment-time ! bash -c "nightscout latest-openaps-treatment $NIGHTSCOUT_HOST | json created_at"
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps alias add format-latest-nightscout-treatments '! bash -c "ni ghtscout cull-latest-openaps-treatments monitor/pumphistory-zoned.json settings/model.json $(ope naps latest-ns-treatment-time) > upload/latest-treatments.json"' || die "Can't add format-latest -nightscout-treatments"
added format-latest-nightscout-treatments ! bash -c "nightscout cull-latest-openaps-treatments monitor/pumphistory-zoned.json settings/model.json $(openaps latest-ns-treatment-time) > upload/latest-treatments.json"
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps alias add upload-recent-treatments '! bash -c "openaps forma t-latest-nightscout-treatments && test $(json -f upload/latest-treatments.json -a created_at eve ntType | wc -l ) -gt 0 && (ns-upload $NIGHTSCOUT_HOST $API_SECRET treatments.json upload/latest- treatments.json ) || echo \"No recent treatments to upload\""' || die "Can't add upload-recent-t reatments"
added upload-recent-treatments ! bash -c "openaps format-latest-nightscout-treatments && test $(json -f upload/latest-treatments.json -a created_at eventType | wc -l ) -gt 0 && (ns-upload $NIGHTSCOUT_HOST $API_SECRET treatments.json upload/latest-treatments.json ) || echo \"No recent treatments to upload\""
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps upload-recent-treatments
bash: upload/latest-treatments.json: No such file or directory
No recent treatments to upload
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps upload-recent-treatments
bash: upload/latest-treatments.json: No such file or directory
No recent treatments to upload
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [K]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m cat monitos[Kr/iob.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m cat monitor/iob.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report invoke monitor/iob.json
calculate-iob://JSON/shell/monitor/iob.json

module.js:485
    throw err;
          ^
SyntaxError: /home/pi/bulgaria/settings/profile.json: Unexpected token B
    at Object.parse (native)
    at Object.Module._extensions..json (module.js:482:27)
    at Module.load (module.js:356:32)
    at Function.Module._load (module.js:312:12)
    at Module.require (module.js:364:17)
    at require (module.js:380:17)
    at Object.<anonymous> (/usr/local/lib/node_modules/oref0/bin/oref0-calculate-iob.js:35:22)
    at Module._compile (module.js:456:26)
    at Object.Module._extensions..js (module.js:474:10)
    at Module.load (module.js:356:32)
No JSON object could be decoded

Traceback (most recent call last):
  File "/usr/local/bin/openaps-report", line 4, in <module>
    __import__('pkg_resources').run_script('openaps==0.0.10', 'openaps-report')
  File "/usr/local/lib/python2.7/dist-packages/setuptools-20.9.0-py2.7.egg/pkg_resources/__init__.py", line 719, in run_script
    self.require(requires)[0].run_script(script_name, ns)
  File "/usr/local/lib/python2.7/dist-packages/setuptools-20.9.0-py2.7.egg/pkg_resources/__init__.py", line 1504, in run_script
    exec(code, namespace, namespace)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/EGG-INFO/scripts/openaps-report", line 82, in <module>
    app( )
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/cli/__init__.py", line 44, in __call__
    self.run(self.args)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/EGG-INFO/scripts/openaps-report", line 75, in run
    output = app(args, self)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/cli/subcommand.py", line 52, in __call__
    return self.method.main(args, app)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/reports/invoke.py", line 48, in main
    reporters.Reporter(report, device, task)(output)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/reports/reporters/__init__.py", line 27, in __call__
    self.blob = self.serialize(data)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/reports/reporters/__init__.py", line 25, in serialize
    return self.method.serialize(render(data), self)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/vendors/process.py", line 56, in prerender_json
    return json.loads(data)
  File "/usr/lib/python2.7/json/__init__.py", line 338, in loads
    return _default_decoder.decode(s)
  File "/usr/lib/python2.7/json/decoder.py", line 366, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib/python2.7/json/decoder.py", line 384, in raw_decode
    raise ValueError("No JSON object could be decoded")
ValueError: No JSON object could be decoded
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m cat monitor/pumphistory.json
[
  {
    "programmed": 2.0, 
    "_type": "Bolus", 
    "_description": "Bolus 2016-04-22T14:01:08 head[8], body[0] op[0x01]", 
    "timestamp": "2016-04-22T14:01:08", 
    "_body": "", 
    "_head": "0100500050000000", 
    "amount": 2.0, 
    "unabsorbed": 0.0, 
    "duration": 0, 
    "type": "normal", 
    "_date": "48014e7610"
  }
]]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m cat settings/profile.json
BG Target data is expected to be expressed in mg/dL. Found mmol/L in settings/bg_targets.json .
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m cat monitor/clock.json
"2016-04-22T19:32:53"]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report show monitor/iob.json --cli
usage: openaps-report [-h] [--version] {add,remove,show,invoke} ...
openaps-report: error: unrecognized arguments: --cli
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report list
usage: openaps-report [-h] [--version] {add,remove,show,invoke} ...
openaps-report: error: argument action: invalid choice: 'list' (choose from 'add', 'remove', 'show', 'invoke')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report list[K[K[K[Kahow
^[[A    usage: openaps-report [-h] [--version] {add,remove,show,invoke} ...
openaps-report: error: argument action: invalid choice: 'ahow' (choose from 'add', 'remove', 'show', 'invoke')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report ahow[K[K[K[Kshow
veo://JSON/iter_pump_hours/last_four_pump_hours.json
cgm://JSON/iter_glucose/last_four_cgm_hours.json
tz://JSON/clock/monitor/clock-zoned.json
veo://JSON/read_clock/read_clock.json
veo://JSON/read_settings/settings/settings.json
veo://JSON/read_bg_targets/settings/bg_targets.json
veo://JSON/read_insulin_sensitivies/settings/insulin_sensitivities.json
veo://JSON/read_basal_profile_std/settings/basal_profile.json
get-profile://text/shell/settings/profile.json
veo://JSON/iter_pump_hours/monitor/pumphistory.json
veo://JSON/read_clock/monitor/clock.json
calculate-iob://JSON/shell/monitor/iob.json
veo://JSON/read_temp_basal/monitor/temp_basal.json
cgm://JSON/iter_glucose/monitor/glucose.json
determine-basal://text/shell/enact/suggested.json
ns-status://JSON/shell/monitor/upload-status.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report showahowlistshow monitor/iob.json --cli[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[20Pcat monitor/clock.jsonsettings/profile.jsonmonitor/pumphistory.json
[
  {
    "programmed": 2.0, 
    "_type": "Bolus", 
    "_description": "Bolus 2016-04-22T14:01:08 head[8], body[0] op[0x01]", 
    "timestamp": "2016-04-22T14:01:08", 
    "_body": "", 
    "_head": "0100500050000000", 
    "amount": 2.0, 
    "unabsorbed": 0.0, 
    "duration": 0, 
    "type": "normal", 
    "_date": "48014e7610"
  }
]]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report invoke monitor/iob.json
calculate-iob://JSON/shell/monitor/iob.json

module.js:485
    throw err;
          ^
SyntaxError: /home/pi/bulgaria/settings/profile.json: Unexpected token B
    at Object.parse (native)
    at Object.Module._extensions..json (module.js:482:27)
    at Module.load (module.js:356:32)
    at Function.Module._load (module.js:312:12)
    at Module.require (module.js:364:17)
    at require (module.js:380:17)
    at Object.<anonymous> (/usr/local/lib/node_modules/oref0/bin/oref0-calculate-iob.js:35:22)
    at Module._compile (module.js:456:26)
    at Object.Module._extensions..js (module.js:474:10)
    at Module.load (module.js:356:32)
No JSON object could be decoded

Traceback (most recent call last):
  File "/usr/local/bin/openaps-report", line 4, in <module>
    __import__('pkg_resources').run_script('openaps==0.0.10', 'openaps-report')
  File "/usr/local/lib/python2.7/dist-packages/setuptools-20.9.0-py2.7.egg/pkg_resources/__init__.py", line 719, in run_script
    self.require(requires)[0].run_script(script_name, ns)
  File "/usr/local/lib/python2.7/dist-packages/setuptools-20.9.0-py2.7.egg/pkg_resources/__init__.py", line 1504, in run_script
    exec(code, namespace, namespace)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/EGG-INFO/scripts/openaps-report", line 82, in <module>
    app( )
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/cli/__init__.py", line 44, in __call__
    self.run(self.args)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/EGG-INFO/scripts/openaps-report", line 75, in run
    output = app(args, self)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/cli/subcommand.py", line 52, in __call__
    return self.method.main(args, app)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/reports/invoke.py", line 48, in main
    reporters.Reporter(report, device, task)(output)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/reports/reporters/__init__.py", line 27, in __call__
    self.blob = self.serialize(data)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/reports/reporters/__init__.py", line 25, in serialize
    return self.method.serialize(render(data), self)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/vendors/process.py", line 56, in prerender_json
    return json.loads(data)
  File "/usr/lib/python2.7/json/__init__.py", line 338, in loads
    return _default_decoder.decode(s)
  File "/usr/lib/python2.7/json/decoder.py", line 366, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib/python2.7/json/decoder.py", line 384, in raw_decode
    raise ValueError("No JSON object could be decoded")
ValueError: No JSON object could be decoded
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m cat settings/profile.json
BG Target data is expected to be expressed in mg/dL. Found mmol/L in settings/bg_targets.json .
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m bg-targets-raw.json
bash: bg-targets-raw.json: command not found
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps device add -h
usage: openaps-device add [-h] [--extra EXTRA]
                          name {dexcom,medtronic,process,units,timezones} ...

add    - add a new device configuration

positional arguments:
  name

optional arguments:
  -h, --help            show this help message and exit
  --extra EXTRA, -e EXTRA
                        Name of extra ini file to use.

## VendorConfigurations:
  {dexcom,medtronic,process,units,timezones}
                        Operation
    dexcom              Dexcom - openaps driver for dexcom
    medtronic           Medtronic - openaps driver for Medtronic
    process             process - a fake vendor to run arbitrary commands
    units               Units - units tool for openaps
    timezones           Timezones - manage timezones in diabetes data with
                        ease.
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps device add units units
added units://units
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps use -h
usage: openaps-use [-h] [--format {text,json,base,stdout}] [--output OUTPUT]
                   [--version]
                   device ...

 openaps-use - use a registered device

optional arguments:
  -h, --help            show this help message and exit
  --format {text,json,base,stdout}
  --output OUTPUT
  --version             show program's version number and exit

Known Devices Menu:
  These are the devices openaps knows about:    

  device                Name and description:
    calculate-iob       process - a fake vendor to run arbitrary commands
    cgm                 Dexcom - openaps driver for dexcom
    determine-basal     process - a fake vendor to run arbitrary commands
    get-profile         process - a fake vendor to run arbitrary commands
    ns-status           process - a fake vendor to run arbitrary commands
    oref0               process - a fake vendor to run arbitrary commands
    tz                  Timezones - manage timezones in diabetes data with
                        ease.
    units               Units - units tool for openaps
    veo                 Medtronic - openaps driver for Medtronic

Once a device is registered in openaps.ini, it can be used.
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps use units -h
usage: openaps-use units [-h] USAGE ...

optional arguments:
  -h, --help            show this help message and exit

## Device units:
  vendor openaps.vendors.units
  
  Units - units tool for openaps
  
      

  USAGE                 Usage Details
    bg_targets          Convert bg_targets json to preferred unit.
    insulin_sensitivities
                        Convert read_insulin_sensitivities json to preferred
                        unit.
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps use units bg_targets settings/bg-targets-raw.json
Traceback (most recent call last):
  File "/usr/local/bin/openaps-use", line 4, in <module>
    __import__('pkg_resources').run_script('openaps==0.0.10', 'openaps-use')
  File "/usr/local/lib/python2.7/dist-packages/setuptools-20.9.0-py2.7.egg/pkg_resources/__init__.py", line 719, in run_script
    self.require(requires)[0].run_script(script_name, ns)
  File "/usr/local/lib/python2.7/dist-packages/setuptools-20.9.0-py2.7.egg/pkg_resources/__init__.py", line 1504, in run_script
    exec(code, namespace, namespace)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/EGG-INFO/scripts/openaps-use", line 63, in <module>
    app( )
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/cli/__init__.py", line 44, in __call__
    self.run(self.args)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/EGG-INFO/scripts/openaps-use", line 57, in run
    output = app(args, self)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/uses/__init__.py", line 92, in __call__
    return self.method.selected(args)(args, app)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/uses/__init__.py", line 31, in __call__
    return self.method(args, app)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/uses/use.py", line 45, in __call__
    output = self.main(args, app)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/vendors/units.py", line 45, in main
    program = self.get_program(args)
  File "/usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg/openaps/vendors/units.py", line 31, in get_program
    program = json.load(argparse.FileType('r')(params.get('input')))
  File "/usr/lib/python2.7/argparse.py", line 1142, in __call__
    raise ArgumentTypeError(message % (string, e))
argparse.ArgumentTypeError: can't open 'settings/bg-targets-raw.json': [Errno 2] No such file or directory: 'settings/bg-targets-raw.json'
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps units
openaps: 'units' is not an openaps command. See 'openaps --help'.
        
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps h
openaps: 'h' is not an openaps command. See 'openaps --help'.
        
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps h[C-h
usage: openaps [-h] [-c C C] [-C CONFIG] [--version] [command] ...

  openaps - openaps: a toolkit for DIY artificial pancreas system

positional arguments:
  command
  args

optional arguments:
  -h, --help            show this help message and exit
  -c C C
  -C CONFIG, --config CONFIG
  --version             show program's version number and exit

  Utilities for developing an artificial pancreas system.
  openaps helps you manage and structure reports for various devices.

       .-. .,-.  .-. .--. .-.  .,-. .--.
      (   )|   )(.-' |  |(   ) |   )`--.
       `-' |`-'  `--''  `-`-'`-|`-' `--'
           |                   |        
           '                   '        
Common workflows:

Getting started:

openaps init <name>    - create a new instance of openaps
openaps init myopenaps - this creates an instance of openaps in a new
                         directory, called myopenaps

cd myopenaps - change directory to root of new repo

A valid instance of openaps is a git repo with a file called
openaps.ini present.

openaps will track configuration and some status information inside of
openaps.ini.  If you already have a git repo which you would like to
become a valid openaps environent, in the root of your repo, run:

    touch openaps.ini
    git add openaps.ini
    git commit -avm 'init openaps'

Now, wth a valid openaps environment, you can register devices for
use.  A device is implemented by a vendor.  openaps [will] provide a
modular, language and process independent environment for creating
vendors and devices, but for now the only two are dexcom and
medtronic.

To register devices for use, see:
  openaps device -h
  openaps device add <name> <vendor> [opts...]
  eg:
  # register a medtronic device named pump
  openaps device add pump medtronic 665455
  # register a dexcom device named cgm
  openaps device add cgm dexcom

Now that devices are known, and we have a variety of commands
available.  We can explore how to produce reports by using devices
with the openaps use command:

    openaps use <device-name> <use-name> [opts]

openaps use commands can only be used after devices have been added to
the openaps.ini config using openaps device add.
Eg:
    openaps use pump -h        - show available commands for the
                                 device known as "pump"
    openaps use pump iter_pump - get last 100 pump history records
                                 from the device called pump
    openaps use cgm -h         - show available commands for the
                                 device known as "cgm"
    openaps use cgm glucose

After experimenting with openaps use commands, users can save reports
using the openaps report commands.
openaps report commands map openaps use commands to filenames:

    openaps report add <report-name> <report-formatter> <device> <use> [opts]

    # add a report, saved in a file called pump-history.json, which is
    # JSON format, from device pump using use iter_pump.
    openaps report add pump-history.json JSON pump iter_pump

    # add a report, saved in a file called glucose.json, which is
    # JSON format, from device cgm using use glucose.
    openaps report add glucose.json JSON cgm glucose

    # invoke the report to create glucose.json
    openaps report invoke glucose.json

    # invoke the report to create pump-history.json
    openaps report invoke pump-history.json

  All commands support tab completion, and -h help options to help
  explore the live help system.
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m cat settings/bg_targets.json
{
  "units": "mmol/L", 
  "raw": "0x02 0x00 0x32 0x3c 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00", 
  "targets": [
    {
      "high": 6.0, 
      "start": "00:00:00", 
      "low": 5.0, 
      "offset": 0, 
      "i": 0, 
      "x": 0
    }
  ], 
  "first": 2
}]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report rename bg[K[Ksettings/bg_targets.json
usage: openaps-report [-h] [--version] {add,remove,show,invoke} ...
openaps-report: error: argument action: invalid choice: 'rename' (choose from 'add', 'remove', 'show', 'invoke')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m sudo pip install -U git+git://github.com/openaps/openaps'#dev'
Downloading/unpacking git+git://github.com/openaps/openaps
  Cloning git://github.com/openaps/openaps to /tmp/pip-af5c9h-build
  Running setup.py (path:/tmp/pip-af5c9h-build/setup.py) egg_info for package from git+git://github.com/openaps/openaps
    
Downloading/unpacking pyserial from https://pypi.python.org/packages/source/p/pyserial/pyserial-3.0.1.tar.gz#md5=c8521e49f8852196aac39431e0901703 (from openaps==0.0.10)
  Downloading pyserial-3.0.1.tar.gz (134kB):   Downloading pyserial-3.0.1.tar.gz (134kB):   3%  4.1kB  Downloading pyserial-3.0.1.tar.gz (134kB):   6%  8.2kB  Downloading pyserial-3.0.1.tar.gz (134kB):   9%  12kB   Downloading pyserial-3.0.1.tar.gz (134kB):  12%  16kB  Downloading pyserial-3.0.1.tar.gz (134kB):  15%  20kB  Downloading pyserial-3.0.1.tar.gz (134kB):  18%  24kB  Downloading pyserial-3.0.1.tar.gz (134kB):  21%  28kB  Downloading pyserial-3.0.1.tar.gz (134kB):  24%  32kB  Downloading pyserial-3.0.1.tar.gz (134kB):  27%  36kB  Downloading pyserial-3.0.1.tar.gz (134kB):  30%  40kB  Downloading pyserial-3.0.1.tar.gz (134kB):  33%  45kB  Downloading pyserial-3.0.1.tar.gz (134kB):  36%  49kB  Downloading pyserial-3.0.1.tar.gz (134kB):  39%  53kB  Downloading pyserial-3.0.1.tar.gz (134kB):  42%  57kB  Downloading pyserial-3.0.1.tar.gz (134kB):  45%  61kB  Downloading pyserial-3.0.1.tar.gz (134kB):  48%  65kB  Downloading pyserial-3.0.1.tar.gz (134kB):  51%  69kB  Downloading pyserial-3.0.1.tar.gz (134kB):  54%  73kB  Downloading pyserial-3.0.1.tar.gz (134kB):  57%  77kB  Downloading pyserial-3.0.1.tar.gz (134kB):  60%  81kB  Downloading pyserial-3.0.1.tar.gz (134kB):  63%  86kB  Downloading pyserial-3.0.1.tar.gz (134kB):  66%  90kB  Downloading pyserial-3.0.1.tar.gz (134kB):  69%  94kB  Downloading pyserial-3.0.1.tar.gz (134kB):  72%  98kB  Downloading pyserial-3.0.1.tar.gz (134kB):  75%  102kB  Downloading pyserial-3.0.1.tar.gz (134kB):  79%  106kB  Downloading pyserial-3.0.1.tar.gz (134kB):  82%  110kB  Downloading pyserial-3.0.1.tar.gz (134kB):  85%  114kB  Downloading pyserial-3.0.1.tar.gz (134kB):  88%  118kB  Downloading pyserial-3.0.1.tar.gz (134kB):  91%  122kB  Downloading pyserial-3.0.1.tar.gz (134kB):  94%  126kB  Downloading pyserial-3.0.1.tar.gz (134kB):  97%  131kB  Downloading pyserial-3.0.1.tar.gz (134kB): 100%  134kB  Downloading pyserial-3.0.1.tar.gz (134kB):              Downloading pyserial-3.0.1.tar.gz (134kB): 134kB downloaded
  Running setup.py (path:/tmp/pip-build-09qZn5/pyserial/setup.py) egg_info for package pyserial
    
Downloading/unpacking python-dateutil from https://pypi.python.org/packages/33/68/9eadc96f9899caebd98f55f942d6a8f3fb2b8f8e69ba81a0f771269897e9/python_dateutil-2.5.3-py2.py3-none-any.whl#md5=dbcd46b171e01d4518db96e3571810db (from openaps==0.0.10)
  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):   Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):   2%  4.1kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):   4%  8.2kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):   6%  12kB   Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):   8%  16kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  10%  20kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  12%  24kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  14%  28kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  16%  32kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  18%  36kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  20%  40kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  22%  45kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  24%  49kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  26%  53kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  28%  57kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  30%  61kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  32%  65kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  34%  69kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  36%  73kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  38%  77kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  40%  81kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  42%  86kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  44%  90kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  46%  94kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  48%  98kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  50%  102kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  52%  106kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  54%  110kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  56%  114kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  58%  118kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  60%  122kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  63%  126kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  65%  131kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  67%  135kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  69%  139kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  71%  143kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  73%  147kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  75%  151kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  77%  155kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  79%  159kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  81%  163kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  83%  167kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  85%  172kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  87%  176kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  89%  180kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  91%  184kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  93%  188kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  95%  192kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  97%  196kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):  99%  200kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB): 100%  201kB  Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB):              Downloading python_dateutil-2.5.3-py2.py3-none-any.whl (201kB): 201kB downloaded
Requirement already up-to-date: argcomplete in /usr/local/lib/python2.7/dist-packages/argcomplete-1.1.1-py2.7.egg (from openaps==0.0.10)
Downloading/unpacking gitpython from https://pypi.python.org/packages/7b/6f/93f6febc5dab53c3b67f29bc1c3d7d6b5df1f5dadbdb1d1c6cc84a3caae8/GitPython-2.0.0.tar.gz#md5=c1d03f3e2d54ddea520053135cfa6993 (from openaps==0.0.10)
  Downloading GitPython-2.0.0.tar.gz (382kB):   Downloading GitPython-2.0.0.tar.gz (382kB):   1%  4.1kB  Downloading GitPython-2.0.0.tar.gz (382kB):   2%  8.2kB  Downloading GitPython-2.0.0.tar.gz (382kB):   3%  12kB   Downloading GitPython-2.0.0.tar.gz (382kB):   4%  16kB  Downloading GitPython-2.0.0.tar.gz (382kB):   5%  20kB  Downloading GitPython-2.0.0.tar.gz (382kB):   6%  24kB  Downloading GitPython-2.0.0.tar.gz (382kB):   7%  28kB  Downloading GitPython-2.0.0.tar.gz (382kB):   8%  32kB  Downloading GitPython-2.0.0.tar.gz (382kB):   9%  36kB  Downloading GitPython-2.0.0.tar.gz (382kB):  10%  40kB  Downloading GitPython-2.0.0.tar.gz (382kB):  11%  45kB  Downloading GitPython-2.0.0.tar.gz (382kB):  12%  49kB  Downloading GitPython-2.0.0.tar.gz (382kB):  13%  53kB  Downloading GitPython-2.0.0.tar.gz (382kB):  15%  57kB  Downloading GitPython-2.0.0.tar.gz (382kB):  16%  61kB  Downloading GitPython-2.0.0.tar.gz (382kB):  17%  65kB  Downloading GitPython-2.0.0.tar.gz (382kB):  18%  69kB  Downloading GitPython-2.0.0.tar.gz (382kB):  19%  73kB  Downloading GitPython-2.0.0.tar.gz (382kB):  20%  77kB  Downloading GitPython-2.0.0.tar.gz (382kB):  21%  81kB  Downloading GitPython-2.0.0.tar.gz (382kB):  22%  86kB  Downloading GitPython-2.0.0.tar.gz (382kB):  23%  90kB  Downloading GitPython-2.0.0.tar.gz (382kB):  24%  94kB  Downloading GitPython-2.0.0.tar.gz (382kB):  25%  98kB  Downloading GitPython-2.0.0.tar.gz (382kB):  26%  102kB  Downloading GitPython-2.0.0.tar.gz (382kB):  27%  106kB  Downloading GitPython-2.0.0.tar.gz (382kB):  28%  110kB  Downloading GitPython-2.0.0.tar.gz (382kB):  30%  114kB  Downloading GitPython-2.0.0.tar.gz (382kB):  31%  118kB  Downloading GitPython-2.0.0.tar.gz (382kB):  32%  122kB  Downloading GitPython-2.0.0.tar.gz (382kB):  33%  126kB  Downloading GitPython-2.0.0.tar.gz (382kB):  34%  131kB  Downloading GitPython-2.0.0.tar.gz (382kB):  35%  135kB  Downloading GitPython-2.0.0.tar.gz (382kB):  36%  139kB  Downloading GitPython-2.0.0.tar.gz (382kB):  37%  143kB  Downloading GitPython-2.0.0.tar.gz (382kB):  38%  147kB  Downloading GitPython-2.0.0.tar.gz (382kB):  39%  151kB  Downloading GitPython-2.0.0.tar.gz (382kB):  40%  155kB  Downloading GitPython-2.0.0.tar.gz (382kB):  41%  159kB  Downloading GitPython-2.0.0.tar.gz (382kB):  42%  163kB  Downloading GitPython-2.0.0.tar.gz (382kB):  43%  167kB  Downloading GitPython-2.0.0.tar.gz (382kB):  45%  172kB  Downloading GitPython-2.0.0.tar.gz (382kB):  46%  176kB  Downloading GitPython-2.0.0.tar.gz (382kB):  47%  180kB  Downloading GitPython-2.0.0.tar.gz (382kB):  48%  184kB  Downloading GitPython-2.0.0.tar.gz (382kB):  49%  188kB  Downloading GitPython-2.0.0.tar.gz (382kB):  50%  192kB  Downloading GitPython-2.0.0.tar.gz (382kB):  51%  196kB  Downloading GitPython-2.0.0.tar.gz (382kB):  52%  200kB  Downloading GitPython-2.0.0.tar.gz (382kB):  53%  204kB  Downloading GitPython-2.0.0.tar.gz (382kB):  54%  208kB  Downloading GitPython-2.0.0.tar.gz (382kB):  55%  212kB  Downloading GitPython-2.0.0.tar.gz (382kB):  56%  217kB  Downloading GitPython-2.0.0.tar.gz (382kB):  57%  221kB  Downloading GitPython-2.0.0.tar.gz (382kB):  58%  225kB  Downloading GitPython-2.0.0.tar.gz (382kB):  60%  229kB  Downloading GitPython-2.0.0.tar.gz (382kB):  61%  233kB  Downloading GitPython-2.0.0.tar.gz (382kB):  62%  237kB  Downloading GitPython-2.0.0.tar.gz (382kB):  63%  241kB  Downloading GitPython-2.0.0.tar.gz (382kB):  64%  245kB  Downloading GitPython-2.0.0.tar.gz (382kB):  65%  249kB  Downloading GitPython-2.0.0.tar.gz (382kB):  66%  253kB  Downloading GitPython-2.0.0.tar.gz (382kB):  67%  258kB  Downloading GitPython-2.0.0.tar.gz (382kB):  68%  262kB  Downloading GitPython-2.0.0.tar.gz (382kB):  69%  266kB  Downloading GitPython-2.0.0.tar.gz (382kB):  70%  270kB  Downloading GitPython-2.0.0.tar.gz (382kB):  71%  274kB  Downloading GitPython-2.0.0.tar.gz (382kB):  72%  278kB  Downloading GitPython-2.0.0.tar.gz (382kB):  73%  282kB  Downloading GitPython-2.0.0.tar.gz (382kB):  75%  286kB  Downloading GitPython-2.0.0.tar.gz (382kB):  76%  290kB  Downloading GitPython-2.0.0.tar.gz (382kB):  77%  294kB  Downloading GitPython-2.0.0.tar.gz (382kB):  78%  299kB  Downloading GitPython-2.0.0.tar.gz (382kB):  79%  303kB  Downloading GitPython-2.0.0.tar.gz (382kB):  80%  307kB  Downloading GitPython-2.0.0.tar.gz (382kB):  81%  311kB  Downloading GitPython-2.0.0.tar.gz (382kB):  82%  315kB  Downloading GitPython-2.0.0.tar.gz (382kB):  83%  319kB  Downloading GitPython-2.0.0.tar.gz (382kB):  84%  323kB  Downloading GitPython-2.0.0.tar.gz (382kB):  85%  327kB  Downloading GitPython-2.0.0.tar.gz (382kB):  86%  331kB  Downloading GitPython-2.0.0.tar.gz (382kB):  87%  335kB  Downloading GitPython-2.0.0.tar.gz (382kB):  88%  339kB  Downloading GitPython-2.0.0.tar.gz (382kB):  90%  344kB  Downloading GitPython-2.0.0.tar.gz (382kB):  91%  348kB  Downloading GitPython-2.0.0.tar.gz (382kB):  92%  352kB  Downloading GitPython-2.0.0.tar.gz (382kB):  93%  356kB  Downloading GitPython-2.0.0.tar.gz (382kB):  94%  360kB  Downloading GitPython-2.0.0.tar.gz (382kB):  95%  364kB  Downloading GitPython-2.0.0.tar.gz (382kB):  96%  368kB  Downloading GitPython-2.0.0.tar.gz (382kB):  97%  372kB  Downloading GitPython-2.0.0.tar.gz (382kB):  98%  376kB  Downloading GitPython-2.0.0.tar.gz (382kB):  99%  380kB  Downloading GitPython-2.0.0.tar.gz (382kB): 100%  382kB  Downloading GitPython-2.0.0.tar.gz (382kB):              Downloading GitPython-2.0.0.tar.gz (382kB): 382kB downloaded
  Running setup.py (path:/tmp/pip-build-09qZn5/gitpython/setup.py) egg_info for package gitpython
    /usr/lib/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: 'test_requirements'
      warnings.warn(msg)
    
    warning: no files found matching 'README'
Requirement already up-to-date: mock in /usr/local/lib/python2.7/dist-packages/mock-2.0.0-py2.7.egg (from openaps==0.0.10)
Requirement already up-to-date: nose in /usr/local/lib/python2.7/dist-packages/nose-1.3.7-py2.7.egg (from openaps==0.0.10)
Requirement already up-to-date: decocare>=0.0.20 in /usr/local/lib/python2.7/dist-packages/decocare-0.0.22-py2.7.egg (from openaps==0.0.10)
Requirement already up-to-date: dexcom_reader>0.0.5 in /usr/local/lib/python2.7/dist-packages/dexcom_reader-0.0.8-py2.7.egg (from openaps==0.0.10)
Requirement already up-to-date: six>=1.5 in /usr/local/lib/python2.7/dist-packages/six-1.10.0-py2.7.egg (from python-dateutil->openaps==0.0.10)
Requirement already up-to-date: gitdb>=0.6.4 in /usr/local/lib/python2.7/dist-packages/gitdb-0.6.4-py2.7-linux-armv7l.egg (from gitpython->openaps==0.0.10)
Requirement already up-to-date: funcsigs>=1 in /usr/local/lib/python2.7/dist-packages/funcsigs-1.0.0-py2.7.egg (from mock->openaps==0.0.10)
Requirement already up-to-date: pbr>=0.11 in /usr/local/lib/python2.7/dist-packages/pbr-1.9.1-py2.7.egg (from mock->openaps==0.0.10)
Requirement already up-to-date: smmap>=0.8.5 in /usr/local/lib/python2.7/dist-packages/smmap-0.9.0-py2.7.egg (from gitdb>=0.6.4->gitpython->openaps==0.0.10)
Requirement already up-to-date: ordereddict in /usr/local/lib/python2.7/dist-packages/ordereddict-1.1-py2.7.egg (from funcsigs>=1->mock->openaps==0.0.10)
Installing collected packages: pyserial, python-dateutil, gitpython, openaps
  Found existing installation: pyserial 2.6
    Not uninstalling pyserial at /usr/lib/python2.7/dist-packages, owned by OS
  Running setup.py install for pyserial
    changing mode of build/scripts-2.7/miniterm.py from 644 to 755
    
    changing mode of /usr/local/bin/miniterm.py to 755
[33m  Could not find .egg-info directory in install record for pyserial from https://pypi.python.org/packages/source/p/pyserial/pyserial-3.0.1.tar.gz#md5=c8521e49f8852196aac39431e0901703 in /usr/lib/python2.7/dist-packages (from openaps==0.0.10)
[0m  Found existing installation: python-dateutil 2.5.2
    Uninstalling python-dateutil:
      Successfully uninstalled python-dateutil
  Found existing installation: GitPython 1.0.2
    Uninstalling GitPython:
      Successfully uninstalled GitPython
  Running setup.py install for gitpython
    /usr/lib/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: 'test_requirements'
      warnings.warn(msg)
    
    warning: no files found matching 'README'
[33m  Could not find .egg-info directory in install record for gitpython from https://pypi.python.org/packages/7b/6f/93f6febc5dab53c3b67f29bc1c3d7d6b5df1f5dadbdb1d1c6cc84a3caae8/GitPython-2.0.0.tar.gz#md5=c1d03f3e2d54ddea520053135cfa6993 in /usr/local/lib/python2.7/dist-packages/GitPython-1.0.2-py2.7.egg (from openaps==0.0.10)
[0m  Found existing installation: openaps 0.0.10
    Uninstalling openaps:
      Successfully uninstalled openaps
  Running setup.py install for openaps
    
    changing mode of build/scripts-2.7/openaps from 644 to 755
    changing mode of build/scripts-2.7/openaps-device from 644 to 755
    changing mode of build/scripts-2.7/openaps-use from 644 to 755
    changing mode of build/scripts-2.7/openaps-report from 644 to 755
    changing mode of build/scripts-2.7/openaps-vendor from 644 to 755
    changing mode of build/scripts-2.7/openaps-alias from 644 to 755
    changing mode of build/scripts-2.7/openaps-import from 644 to 755
    changing mode of /usr/local/bin/openaps-import to 755
    changing mode of /usr/local/bin/openaps-alias to 755
    changing mode of /usr/local/bin/openaps-install-udev-rules to 755
    changing mode of /usr/local/bin/openaps-vendor to 755
    changing mode of /usr/local/bin/git-openaps-init to 755
    changing mode of /usr/local/bin/openaps to 755
    changing mode of /usr/local/bin/openaps-report to 755
    changing mode of /usr/local/bin/openaps-device to 755
    changing mode of /usr/local/bin/openaps-use to 755
[33m  Could not find .egg-info directory in install record for openaps==0.0.10 from git+git://github.com/openaps/openaps in /usr/local/lib/python2.7/dist-packages/openaps-0.0.10-py2.7.egg
[0mSuccessfully installed pyserial python-dateutil gitpython openaps
Cleaning up...
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report remove settings/bg_targets.json
removed veo://JSON/read_bg_targets/settings/bg_targets.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add veo settings/bg_targets_mmol.json
usage: openaps-report add [-h] report {base,text,stdout,JSON} device ...
openaps-report add: error: argument reporter: invalid choice: 'settings/bg_targets_mmol.json' (choose from 'base', 'text', 'stdout', 'JSON')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add veo settings/bg_targets_mmol.jsonJ settings/bg_targets_mmol.json[1P settings/bg_targets_mmol.json[C settings/bg_targets_mmol.jsonJ settings/bg_targets_mmol.jsonS settings/bg_targets_mmol.jsonO settings/bg_targets_mmol.jsonN settings/bg_targets_mmol.json[C settings/bg_targets_mmol.json
usage: openaps-report add [-h] report {base,text,stdout,JSON} device ...
openaps-report add: error: argument device: invalid choice: 'settings/bg_targets_mmol.json' (choose from u'calculate-iob', u'cgm', u'determine-basal', u'get-profile', u'ns-status', u'oref0', u'tz', u'units', u'veo')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add veo JSON  settings/bg_targets_mmol.json[1P[1P[1P[1P[C[C[C[C[C[Cv settings/bg_targets_mmol.jsone settings/bg_targets_mmol.jsono settings/bg_targets_mmol.json
usage: openaps-report add [-h] report {base,text,stdout,JSON} device ...
openaps-report add: error: argument reporter: invalid choice: 'veo' (choose from 'base', 'text', 'stdout', 'JSON')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add settings/bg_targets.json JSON veo [1@_[1@m[1@m[1@o[1@l[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
usage: openaps-report add report {base,text,stdout,JSON} veo [-h] USAGE ...
openaps-report add report {base,text,stdout,JSON} veo: error: too few arguments
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add settings/profile.json text get-profile shell settings/settings.json settings/bg_tar gets.json settings/insulin_sensitivities.json settings/basal_profile.json max_iob.json[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[1@-[1@m[1@m[1@o[1@l[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C settings/bg_targe[1P[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C settings/bg_target[1P[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C settings/bg_targets[1P[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C settings/bg_targets-[1P[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C settings/bg_targets-m[C[1P[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C settings/bg_targets-mm[1P[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C settings/bg_targets-mmo[1P[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C settings/bg_targets-mmol[1P[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C settings/bg_targets-mmol.[1P[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C settings/bg_targets-mmol.j[1P[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C settings/bg_targets-mmol.js[1P[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C settings/bg_targets-mmol.jso[1P[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C settings/bg_targets-mmol.json[1P [A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C settings/bg_targets-mmol.json [K[A]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C settings/bg_targets-mmol.json  [K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P[1P[1P[1P[1P[1P[1P[C[1@ [1P[C[C[C[C[C[C[C[C[C[C[C[36Pbg_targets_mmol.json JSON veo[C[1PJSON veo settings/bg_targets_mmol.json[1@veo JSON [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kopenaps report add settings/bg_targets-mmol.json JSON veo read_bg_targets
added veo://JSON/read_bg_targets/settings/bg_targets-mmol.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps units
openaps: 'units' is not an openaps command. See 'openaps --help'.
        
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m nits[K[K[K[Kunits
bash: units: command not found
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps use units bg_targets settings/bg-targets-raw.json[1Pw.json[1Pw.json[C[1P.jsonm.jsonm.jsono.jsonl.json[1Ptargets-mmol.json_targets-mmol.json
Traceback (most recent call last):
  File "/usr/local/bin/openaps-use", line 63, in <module>
    app( )
  File "/usr/local/lib/python2.7/dist-packages/openaps/cli/__init__.py", line 44, in __call__
    self.run(self.args)
  File "/usr/local/bin/openaps-use", line 57, in run
    output = app(args, self)
  File "/usr/local/lib/python2.7/dist-packages/openaps/uses/__init__.py", line 92, in __call__
    return self.method.selected(args)(args, app)
  File "/usr/local/lib/python2.7/dist-packages/openaps/uses/__init__.py", line 31, in __call__
    return self.method(args, app)
  File "/usr/local/lib/python2.7/dist-packages/openaps/uses/use.py", line 45, in __call__
    output = self.main(args, app)
  File "/usr/local/lib/python2.7/dist-packages/openaps/vendors/units.py", line 45, in main
    program = self.get_program(args)
  File "/usr/local/lib/python2.7/dist-packages/openaps/vendors/units.py", line 31, in get_program
    program = json.load(argparse.FileType('r')(params.get('input')))
  File "/usr/lib/python2.7/argparse.py", line 1142, in __call__
    raise ArgumentTypeError(message % (string, e))
argparse.ArgumentTypeError: can't open 'settings/bg_targets-mmol.json': [Errno 2] No such file or directory: 'settings/bg_targets-mmol.json'
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps use units bg_targets settings/bg_targets-mmol.json[1@r[1@e[1@a[1@d[1@_
usage: openaps-use units [-h] USAGE ...
openaps-use units: error: argument USAGE: invalid choice: 'read_bg_targets' (choose from 'bg_targets', 'insulin_sensitivities')
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps use units read_bg_targets settings/bg_targets-mmol.json[C[1P[1P[1P[1P[1P
Traceback (most recent call last):
  File "/usr/local/bin/openaps-use", line 63, in <module>
    app( )
  File "/usr/local/lib/python2.7/dist-packages/openaps/cli/__init__.py", line 44, in __call__
    self.run(self.args)
  File "/usr/local/bin/openaps-use", line 57, in run
    output = app(args, self)
  File "/usr/local/lib/python2.7/dist-packages/openaps/uses/__init__.py", line 92, in __call__
    return self.method.selected(args)(args, app)
  File "/usr/local/lib/python2.7/dist-packages/openaps/uses/__init__.py", line 31, in __call__
    return self.method(args, app)
  File "/usr/local/lib/python2.7/dist-packages/openaps/uses/use.py", line 45, in __call__
    output = self.main(args, app)
  File "/usr/local/lib/python2.7/dist-packages/openaps/vendors/units.py", line 45, in main
    program = self.get_program(args)
  File "/usr/local/lib/python2.7/dist-packages/openaps/vendors/units.py", line 31, in get_program
    program = json.load(argparse.FileType('r')(params.get('input')))
  File "/usr/lib/python2.7/argparse.py", line 1142, in __call__
    raise ArgumentTypeError(message % (string, e))
argparse.ArgumentTypeError: can't open 'settings/bg_targets-mmol.json': [Errno 2] No such file or directory: 'settings/bg_targets-mmol.json'
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m cat settings/bg_targets-mmol.json
cat: settings/bg_targets-mmol.json: No such file or directory
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add settings/bg_targets-mmol.json JSON veo read_bg_targets
added veo://JSON/read_bg_targets/settings/bg_targets-mmol.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add settings/bg_targets-mmol.json JSON veo read_bg_targets
added veo://JSON/read_bg_targets/settings/bg_targets-mmol.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m car set[K[K[K[K[Kt settings/bg_targets-mmol.jsno[K[K[Kson
cat: settings/bg_targets-mmol.json: No such file or directory
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m cat settings/bg_targets-mmol.json[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Copenaps report add settings/bg_targets-mmol.json JSON veo read_bg_targets[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[40Pcat settings/bg_targets-mmol.json[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[25@openaps use units bg_targets[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
Traceback (most recent call last):
  File "/usr/local/bin/openaps-use", line 63, in <module>
    app( )
  File "/usr/local/lib/python2.7/dist-packages/openaps/cli/__init__.py", line 44, in __call__
    self.run(self.args)
  File "/usr/local/bin/openaps-use", line 57, in run
    output = app(args, self)
  File "/usr/local/lib/python2.7/dist-packages/openaps/uses/__init__.py", line 92, in __call__
    return self.method.selected(args)(args, app)
  File "/usr/local/lib/python2.7/dist-packages/openaps/uses/__init__.py", line 31, in __call__
    return self.method(args, app)
  File "/usr/local/lib/python2.7/dist-packages/openaps/uses/use.py", line 45, in __call__
    output = self.main(args, app)
  File "/usr/local/lib/python2.7/dist-packages/openaps/vendors/units.py", line 45, in main
    program = self.get_program(args)
  File "/usr/local/lib/python2.7/dist-packages/openaps/vendors/units.py", line 31, in get_program
    program = json.load(argparse.FileType('r')(params.get('input')))
  File "/usr/lib/python2.7/argparse.py", line 1142, in __call__
    raise ArgumentTypeError(message % (string, e))
argparse.ArgumentTypeError: can't open 'settings/bg_targets-mmol.json': [Errno 2] No such file or directory: 'settings/bg_targets-mmol.json'
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report invoke settings/bg_targets-mmol.json
veo://JSON/read_bg_targets/settings/bg_targets-mmol.json
^[[A^[[A^[[B^[[B^[[B                    reporting settings/bg_targets-mmol.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report invoke settings/bg_targets-mmol.json[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[7@use units bg_targets[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
{
  "units": "mg/dL", 
  "raw": "0x02 0x00 0x32 0x3c 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00", 
  "user_preferred_units": "mmol/L", 
  "targets": [
    {
      "i": 0, 
      "high": 108.0, 
      "start": "00:00:00", 
      "low": 90.0, 
      "offset": 0, 
      "x": 0
    }
  ], 
  "first": 2
}]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m upload-recent-treatments
bash: upload-recent-treatments: command not found
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m upload-recent-treatmentsoupload-recent-treatmentspupload-recent-treatmentseupload-recent-treatmentsnupload-recent-treatmentsaupload-recent-treatmentspupload-recent-treatmentssupload-recent-treatments upload-recent-treatments
bash: upload/latest-treatments.json: No such file or directory
No recent treatments to upload
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m stst[K[K[K[Kopenaps status-i[Kupload
ns-status://JSON/shell/monitor/upload-status.json

module.js:485
    throw err;
          ^
SyntaxError: /home/pi/bulgaria/monitor/iob.json: Unexpected end of input
    at Object.parse (native)
    at Object.Module._extensions..json (module.js:482:27)
    at Module.load (module.js:356:32)
    at Function.Module._load (module.js:312:12)
    at Module.require (module.js:364:17)
    at require (module.js:380:17)
    at requireWithTimestamp (/usr/local/lib/node_modules/oref0/bin/ns-status.js:22:18)
    at Object.<anonymous> (/usr/local/lib/node_modules/oref0/bin/ns-status.js:50:14)
    at Module._compile (module.js:456:26)
    at Object.Module._extensions..js (module.js:474:10)
No JSON object could be decoded

Traceback (most recent call last):
  File "/usr/local/bin/openaps-report", line 82, in <module>
    app( )
  File "/usr/local/lib/python2.7/dist-packages/openaps/cli/__init__.py", line 44, in __call__
    self.run(self.args)
  File "/usr/local/bin/openaps-report", line 75, in run
    output = app(args, self)
  File "/usr/local/lib/python2.7/dist-packages/openaps/cli/subcommand.py", line 52, in __call__
    return self.method.main(args, app)
  File "/usr/local/lib/python2.7/dist-packages/openaps/reports/invoke.py", line 48, in main
    reporters.Reporter(report, device, task)(output)
  File "/usr/local/lib/python2.7/dist-packages/openaps/reports/reporters/__init__.py", line 27, in __call__
    self.blob = self.serialize(data)
  File "/usr/local/lib/python2.7/dist-packages/openaps/reports/reporters/__init__.py", line 25, in serialize
    return self.method.serialize(render(data), self)
  File "/usr/local/lib/python2.7/dist-packages/openaps/vendors/process.py", line 56, in prerender_json
    return json.loads(data)
  File "/usr/lib/python2.7/json/__init__.py", line 338, in loads
    return _default_decoder.decode(s)
  File "/usr/lib/python2.7/json/decoder.py", line 366, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib/python2.7/json/decoder.py", line 384, in raw_decode
    raise ValueError("No JSON object could be decoded")
ValueError: No JSON object could be decoded
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps use units bg_targets settings/bg_targets-mmol.json
{
  "units": "mg/dL", 
  "raw": "0x02 0x00 0x32 0x3c 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00", 
  "user_preferred_units": "mmol/L", 
  "targets": [
    {
      "i": 0, 
      "high": 108.0, 
      "start": "00:00:00", 
      "low": 90.0, 
      "offset": 0, 
      "x": 0
    }
  ], 
  "first": 2
}]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add settings/bg_targets.json JSON
usage: openaps-report add [-h] report {base,text,stdout,JSON} device ...
openaps-report add: error: too few arguments
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report add settings/bg_targets.json JSON ve [Ko red[Kad_bg_targets
added veo://JSON/read_bg_targets/settings/bg_targets.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps in[K[Kreport invoke settings/bg_targets.json
veo://JSON/read_bg_targets/settings/bg_targets.json
reporting settings/bg_targets.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m openaps report invoke settings/bg_targets.json[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kstatus-upload
ns-status://JSON/shell/monitor/upload-status.json

module.js:485
    throw err;
          ^
SyntaxError: /home/pi/bulgaria/monitor/iob.json: Unexpected end of input
    at Object.parse (native)
    at Object.Module._extensions..json (module.js:482:27)
    at Module.load (module.js:356:32)
    at Function.Module._load (module.js:312:12)
    at Module.require (module.js:364:17)
    at require (module.js:380:17)
    at requireWithTimestamp (/usr/local/lib/node_modules/oref0/bin/ns-status.js:22:18)
    at Object.<anonymous> (/usr/local/lib/node_modules/oref0/bin/ns-status.js:50:14)
    at Module._compile (module.js:456:26)
    at Object.Module._extensions..js (module.js:474:10)
No JSON object could be decoded

Traceback (most recent call last):
  File "/usr/local/bin/openaps-report", line 82, in <module>
    app( )
  File "/usr/local/lib/python2.7/dist-packages/openaps/cli/__init__.py", line 44, in __call__
    self.run(self.args)
  File "/usr/local/bin/openaps-report", line 75, in run
    output = app(args, self)
  File "/usr/local/lib/python2.7/dist-packages/openaps/cli/subcommand.py", line 52, in __call__
    return self.method.main(args, app)
  File "/usr/local/lib/python2.7/dist-packages/openaps/reports/invoke.py", line 48, in main
    reporters.Reporter(report, device, task)(output)
  File "/usr/local/lib/python2.7/dist-packages/openaps/reports/reporters/__init__.py", line 27, in __call__
    self.blob = self.serialize(data)
  File "/usr/local/lib/python2.7/dist-packages/openaps/reports/reporters/__init__.py", line 25, in serialize
    return self.method.serialize(render(data), self)
  File "/usr/local/lib/python2.7/dist-packages/openaps/vendors/process.py", line 56, in prerender_json
    return json.loads(data)
  File "/usr/lib/python2.7/json/__init__.py", line 338, in loads
    return _default_decoder.decode(s)
  File "/usr/lib/python2.7/json/decoder.py", line 366, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib/python2.7/json/decoder.py", line 384, in raw_decode
    raise ValueError("No JSON object could be decoded")
ValueError: No JSON object could be decoded
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m cat monitor/iob/json[K[K[K[K[K.json
]0;pi@raspberrypi: ~/bulgaria[01;32mpi@raspberrypi[00m:[01;34m~/bulgaria $[00m cat monitor/iob.jsonopenaps status-upload[K[K[K[K[K[K[K[K[K[K[K[K[Kupload-recent-treatments
bash: upload/latest-treatments.